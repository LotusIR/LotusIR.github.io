<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[神经网络-NLP Transformer]]></title>
    <url>%2F2019%2F09%2F25%2Ftransformer%2F</url>
    <content type="text"><![CDATA[TransformerTransformer模型是在GOOGLE的一篇论文Attention is All You Need被提出的一种神经网络模型。 用途该模型主要用于机器翻译，简单来说输入一种语言的一句话，它会把这句话翻译成别的语言。 整体结构Transformer的整体结构由encoder-decoder两部分构成，在论文中，采用了6层encoder和6层decoder的结构，实际上可以是任意层的，论文中的模型整体结构如下图所示。 encoder每一层的encoder层由两层组成，一层self-attention层以及一层前馈神经网络。除此以外，在第一层encoder前还需要进行词嵌入。第一层的encoder层如下图所示，之后的每一层encoder层讲上一层encoder层的前馈神经网络的输出作为输入，其余结构相同。 self-attention用途self-attention是一种特别的注意力机制，但它与传统的注意力机制类似都用于获取句子中其他词与当前词的关系。 假设下面的句子就是我们需要翻译的输入句： “The animal didn’t cross the street because it was too tired” 这句话中的&quot;it&quot;指的是什么？它指的是“animal”还是“street”？对于人来说，这其实是一个很简单的问题，但是对于一个算法来说，处理这个问题其实并不容易。self attention的出现就是为了解决这个问题，通过self attention，我们能将“it”与“animal”联系起来。 通过一张图来描述self-attention处理”it”后的情况如下图所示。通过这张图可以看出，”it”与”the animal”的联系最大，该模型通过self-attention学习到了这一点。 计算方式对于每一个输入，我们将三个矩阵（要在训练中得到具体值，初始随机）与输入相乘，得到三个新的矩阵”queries”,”keys”,”values”,在经过一系列的计算可以得到其余输入与当前输入的关系，加权后作为下一层前馈网络的输入。计算的过程如下 multi-headed attention该模型还应用了叫做multi-headed attention的方法，实际上就是用多个矩阵来生成上述的”queries”,”keys”,”values”三个矩阵，具体操作过程中是将多个矩阵拼成一个大矩阵再乘上一个权重矩阵获得，该权重矩阵的值也在训练中获得。 decoderdecoder层的结构与encoder层类似，除了多了一层attention层外均与encoder层相同。 postional-encoding为了得到输入序列中的单词顺序，该模型通过一个固定的公式来生成单词的位置向量并将其加入到了词嵌入的过程中。]]></content>
      <tags>
        <tag>Transformer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ICPC随笔]]></title>
    <url>%2F2019%2F09%2F09%2Ficpc20190909%2F</url>
    <content type="text"><![CDATA[好久没更新了。。打了几场ICPC网络赛，把一些收获写一下记录一下吧 离散化当数据很大而询问较小时，常常用到的方法，只考虑被询问的元素，以前写的离散化过于暴力，这里整理一个简单的模版。 1234567891011121314151617181920212223#include &lt;bits/stdc++.h&gt;using namespace std;const int maxn = 1e7+100;//num是将a数组升序后去重的数组，n为a的元素数，cnt是num数组的元素数。int a[maxn],num[maxn],cnt,n;//idx用于获取a被离散化后x的id。int idx(int x)&#123; return lower_bound(num,num+cnt,x)-num;&#125;int main()&#123; //录入a的数据，复制到num中 cin &gt;&gt; n; for(int i = 0; i &lt; n; ++i)&#123; cin &gt;&gt; a[i]; num[i]=a[i]; &#125; //离散化过程 sort(num,num+n); cnt = unique(num,num+n)-num;&#125; 链式前向星一个简单实用的小技巧？存图的边在初始化时会快很多，本质是多个链表(从后往前)。在链式前向星用到的数组中head[i]表示最后一条被加入的从i出发的边的编号，nxt[i]表示第i条边的上一条和它出发点相同的边的编号，并且nxt[]数组最终都指向-1，因此从head[u]开始遍历，沿着nxt[]数组指向的方向直到-1就能遍历所有从u出发的边。 123456789101112131415161718192021222324252627282930313233#include &lt;bits/stdc++.h&gt;using namespace std;const int maxn = 1e7+100;int head[maxn],nxt[maxn],cur;pair&lt;int,int&gt; E[maxn];//加边函数，无向图时添加一条反向边即可void addedge(int u,int v,int w)&#123; E[cur]=make_pair(v,w); nxt[cur]=head[u]; head[u]=cur++; //反向边的添加 /* E[cur]=make_pair(u,w); nxt[cur]=head[v]; head[v]=cur++; */&#125;//初始化函数，理论上重置head就行了？void init()&#123; memset(head,-1,sizeof(head)); memset(nxt,-1,sizeof(nxt));&#125;//遍历从u出发的每一条边，这里只是把代码块单独抽出，实际写的时候写进算法中void explore(int u)&#123; for(int i = head[u]; i != -1; i = nxt[i])&#123; pair&lt;int,int&gt; edge = E[i]; //function(); &#125;&#125; 欧拉降幂及大数模除欧拉降幂一个公式:实现: 12345678910111213141516171819202122232425262728293031323334353637#include &lt;bits/stdc++.h&gt;using namespace std;typedef long long ll;//获取单个数字的欧拉函数的值，复杂度为根号nll phi(ll n) &#123; ll ans = n ; for(int i = 2 ; i*i&lt;=n ; i++ ) &#123; if(!(n%i))&#123; ans = ans/i*(i-1) ; while(n%i == 0 )&#123; n/=i ; &#125; &#125; &#125; if(n&gt;1) ans = ans/n*(n-1) ; return ans ;&#125;//快速幂ll qpow(ll x,ll y,ll mod)&#123; ll res = 1; while(y)&#123; if(y&amp;1) res = res*x&gt;mod?res*x%mod+mod:res*x; x = x*x&gt;mod?x*x%mod+mod:x*x; y &gt;&gt;= 1; &#125; return res%mod;&#125;int main()&#123; ll a,b,c; cin &gt;&gt; a &gt;&gt; b &gt;&gt; c; ll phi_c = phi(c); cout &lt;&lt; qpow(a,b%phi_c,c) &lt;&lt; endl;&#125; 大数模除在上题中我们使用long long来存储的b，那么当b非常大时如何计算b%phi_c呢？很简单，从b的最左边开始边读边模就行了。核心代码如下 1234string b;cin &gt;&gt; b;ll tmp = 0,phi_c = phi(c);for(int i = 0; i &lt; b.length(); ++i) tmp = (tmp*10+b[i]-'0') % phi_c; 代码最后得到的tmp就是b%phi_c的结果。 a^b%c结合上述两个算法，可以实现a^b%c问题，其中b可以非常大。 123456789101112131415161718192021222324252627282930313233343536373839#include &lt;bits/stdc++.h&gt;using namespace std;typedef long long ll;//获取单个数字的欧拉函数的值，复杂度为根号nll phi(ll n) &#123; ll ans = n ; for(int i = 2 ; i*i&lt;=n ; i++ ) &#123; if(!(n%i))&#123; ans = ans/i*(i-1) ; while(n%i == 0 )&#123; n/=i ; &#125; &#125; &#125; if(n&gt;1) ans = ans/n*(n-1) ; return ans ;&#125;//快速幂ll qpow(ll x,ll y,ll mod)&#123; ll res = 1; while(y)&#123; if(y&amp;1) res = res*x&gt;mod?res*x%mod+mod:res*x; x = x*x&gt;mod?x*x%mod+mod:x*x; y &gt;&gt;= 1; &#125; return res%mod;&#125;int main()&#123; ll a,c; string b; while(cin &gt;&gt; a &gt;&gt; b &gt;&gt; c)&#123; ll tmp = 0,phi_c = phi(c); for(int i = 0; i &lt; b.length(); ++i) tmp = (tmp*10+b[i]-'0') % phi_c; cout &lt;&lt; qpow(a,tmp,c) &lt;&lt; endl; &#125;&#125;]]></content>
      <tags>
        <tag>离散化</tag>
        <tag>链式前向星</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[暑期集训——KMP和字典树]]></title>
    <url>%2F2019%2F08%2F03%2FTrainString%2F</url>
    <content type="text"><![CDATA[还不知道KMP原理只会用的路过。。 前言在讲题之前，说一下next[]数组的含义，next[i]是指在第i个位置前（不包含i）的最大前后缀长度。 以及一个结论：设有字符串str，使len=strlen(str)以及length=len-next[len]，如果len%length==0，那么这个str是一个循环字符串，且循环节的长度为length,循环次数为len/length。至于原理：quote 假设我们有一个字符串ababab,那么next[6]=4对吧，由于next的性质是，匹配失败后，下一个能继续进行匹配的位置，也就是说，把字符串的前四个字母，abab,平移2个单位，这个abab一定与原串的abab重合（否则就不满足失败函数的性质），这说明了什么呢，由于字符串进行了整体平移，而平移后又要重叠，那么必有s[1]=s[3],s[2]=s[4],s[3]=s[5],s[4]=s[6].说明长度为2的字符串在原串中一定重复出现，这就是len-next[len]的含义！ unquote好了就是这些，接着看一下题吧。（代码都共享了） A Hat’s Words(hdu-1247)题目地址：vj题意：给若干个单词，若其中的一个单词是由另外两个单词拼成的，那么称这个单词为hat’s word，要求按字典序输出所有的hat’s word。解题：一开始没什么思路，查了一下百度，发现这题真的是有够暴力。。用给出的所有单词建立字典树，接着对每一个单词的每一种分割，都在字典树上搜索，如果被分割的两边都能被搜索到，那么就是hat’s word，数据比较弱，速度很快，记得按字典序输出，可以用sort排序也可以用set存下后输出。 B 统计难题(hdu-1251)题目地址：vj题意：给若干个单词和若干个前缀，对于每一个前缀，要求输出它在多少个单词中是前缀。解题：字典树板子题（我的模版就是照着这道题打的），插入单词时每经过一个节点就让这个节点的cnt加一，搜索时前缀的结束节点的cnt数就是答案。tips：这道题如果用G++交可能会MLE，用C++交就不会，好像是内存管理方法的问题。 C Phone List(hdu-1671)题目地址：vj题意：给若干个数字串，如果他们之间有两个数字串有公共前缀，那么输出NO，否则输出YES。解题：和B类似，建立完字典树后搜索每一个数字串，如果搜索路径上某一节点的cnt大于等于2，那么就存在公共前缀。 D 单词数(hdu-2072)题目地址：vj题意：给一篇文章，统计文章中不同单词的数量。解题：解法一：直接用set存单词，最后set.size()就是答案。解法二：用单词建立字典树，每次插入新的单词时在末节点打上记号并让ans++，如果已经被打上记号说明是重复的单词。tips：用字典树做这道的话注意一下输入格式，我前几次不知道为啥wa了，改成sstream输入过了。 E Oulipo(hdu-1686)题目地址：vj题意：给一个模式串，给一个主串，问模式串在主串中出现了几次（可以重叠）。解题：KMP算法经典例题，在模式串匹配成功后ans++，让模式串的指针j指向next[j]即可。参考博客：https://shu-ssyze.github.io/2019/07/03/KMP-Algorithm/ F Seek the Name, Seek the Fame(poj-2752)题目地址：vj题意：给一个字符串，输出这个字符串所有满足既是前缀又是后缀的子串的长度。解题：还记得next[i]的含义吗？next[i]是在i位置之前最大公共前后缀的长度，那么我们从next[len]开始遍历直到遍历到0，就是这个字符串所有公共前后缀的长度，最后倒序输出一下就可以了。（如果看不懂可以对着代码自己模拟一下）AC代码： 123456789101112131415161718192021222324252627282930313233343536373839#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;using namespace std;const int maxn = 1e6 + 5;char p[maxn];int t;int next1[maxn+1];int ans[maxn];void getNext()&#123; int plen = strlen(p); int j = 0, k = -1; next1[0] = -1; while(j &lt; plen) &#123; if(k == -1 || p[k] == p[j]) &#123; ++j; ++k; next1[j] = k; &#125; else k = next1[k]; &#125;&#125;int main()&#123; while(~scanf("%s",p))&#123; getNext(); int len = strlen(p); int tmp = next1[len],cnt=0; while(tmp != 0)&#123; ans[cnt++]=tmp; tmp=next1[tmp]; &#125; for(int i = cnt-1; i &gt;= 0; --i) printf("%d ",ans[i]); printf("%d\n",len); &#125;&#125; G 剪花布条(hdu-2087)题目地址：vj题意：给一个模式串和一个主串，问模式串在主串中出现了几次(不可重叠)。解题：仍然是KMP，与E题类似，只不过这一次匹配成功后不再让j指向next[j]而是直接指向0。 H Period(poj-1961)题目地址：vj题意：给一个字符串，问这个字符串从头开始的子串中，有多少个子串是循环字符串(诸如”abab”,”abcabc”，”abababab”的就是循环字符串，即可由某一个循环节字符串组成)，输出这些子串的长度和循环节循环的次数。解题：还记得前言中的结论吗？对字符串的每一个位置应用那个结论就能的到答案了（不懂得再去看两遍，再不懂。。就把结论记住吧）tips: 即使能被整除，整除的结果有可能是1，这种情况我们并不认为他是循环字符串，记得特判一下。AC代码： 123456789101112131415161718192021222324252627282930313233343536373839#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;using namespace std;const int maxn = 1e6 + 5;char p[maxn];int t;int next1[maxn];void getNext()&#123; int plen = strlen(p); int j = 0, k = -1; next1[0] = -1; while(j &lt; plen) &#123; if(k == -1 || p[k] == p[j]) &#123; ++j; ++k; next1[j] = k; &#125; else k = next1[k]; &#125;&#125;int main()&#123; int kase = 0; while(scanf("%d",&amp;t) &amp;&amp; t)&#123; scanf("%s",p); getNext(); int len = strlen(p); printf("Test case #%d\n",++kase); for(int i = 2; i &lt;= len; ++i)&#123; int length = i-next1[i]; if(i % length || i/length == 1) continue; else printf("%d %d\n",i,i/length); &#125; puts(""); &#125;&#125; I Power Strings(poj-2406)题目地址：vj题意：给一个字符串，如果它是一个循环字符串，输出他的最大循环节循环的次数，否则输出1（即循环节为字符串本身）。解题：与H题相同，而且这次不用对每个子串应用那个结论了。AC代码： 12345678910111213141516171819202122232425262728293031323334#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;using namespace std;const int maxn = 1e6 + 5;char p[maxn];int t;int next1[maxn];void getNext()&#123; int plen = strlen(p); int j = 0, k = -1; next1[0] = -1; while(j &lt; plen) &#123; if(k == -1 || p[k] == p[j]) &#123; ++j; ++k; next1[j] = k; &#125; else k = next1[k]; &#125;&#125;int main()&#123; while(~scanf("%s",p))&#123; if(p[0]=='.') break; getNext(); int len = strlen(p); int length = len - next1[len]; if(len % length) puts("1"); else printf("%d\n",len/length); &#125;&#125; 好了就到这里，今天题比较友好，大概是人生第一次AK吧hhhhhhh]]></content>
      <tags>
        <tag>KMP</tag>
        <tag>字典树</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[暑期集训——图论1（最短路、最小生成树）]]></title>
    <url>%2F2019%2F08%2F02%2FTrainTulun1%2F</url>
    <content type="text"><![CDATA[卑微的我只做了板子题。。更新一个一句话题解的博客？ A Networking(POJ-1287)题目地址：VJ题意：裸的不能再裸的最小生成树题，prim或kruscal任选一个就能过了，记得重边时取最短边。 B Constructing Roads(POJ-2421)题目地址：VJ题意：最小生成树，但是有一些边已经被添加了，要求求出还需添加多少边才能形成最小数。解题：用kruscal，对于已经被添加的边，额外添加一条权值为0的边即可。 C Building a Space Station(POJ-2031)题目地址：VJ题意：给出若干个球，对于每个球，给出它的x,y,z坐标以及它的半径r，有重叠部分的球我们认为已经连通，在此基础上求最小生成树。解题：kruscal或prim都可以，两个球之间的边的长度是max(d-r1-r2,0)，d为两个球球心的距离，n^2的到边即可。 D Til the Cows Come Home(POJ-2387)题目地址：vj题意：最短路裸题，跑一遍dij就可以了。 E Invitation Cards(POJ-1511)题目地址：vj题意：给若干个点，问从出发点到这些点再回来至少需要多少距离（如果要到2和3，那么必须经过1→2→1→3→1，即使在走到2的过程中走到3也一样），数据保证可以从任何点到达任何点。解题：正向边跑一遍最短路，反向边再跑一遍最短路，把所有最短路相加就是答案（可以思考一下为什么，其实也不是很难理解，重点是数据保证可以从任何点到达任何点）。tips：由于这道题的数据量十分大，建议使用链式前向星存图，如果使用邻接表存图，那么请事先记录下每一条边的信息重复利用同一个邻接表多次赋值，使用两个邻接表跑两边最短路会超时（我也不知道为什么。。）。链式前向星的代码就不给了，用链式前向星基本不可能T，不管用SPFA还是DIJ都一样，这里给出邻接表的代码。AC代码：(运行时间约5000ms) 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273#include &lt;queue&gt;#include &lt;cstring&gt;#include &lt;cstdio&gt;typedef long long ll;const int maxn = 1e6+5;const int inf = 0x3f3f3f3f;using namespace std;struct edge&#123; int to; int val; edge(int a = 0,int b = 0):to(a),val(b)&#123;&#125;&#125;;struct nod&#123; int pos; int d; nod(int a = 0,int b = 0):pos(a),d(b)&#123;&#125; //优先队列重载大于符号 friend bool operator &gt; (nod a, nod b)&#123; return a.d&gt;b.d; &#125;&#125;;//邻接表vector&lt;edge&gt; E[maxn];priority_queue&lt; nod,vector&lt;nod&gt;,greater&lt;nod&gt; &gt; Q;int T,N,M,dis[maxn],from[maxn],to[maxn],val[maxn];ll ans;void dij()&#123; memset(dis,inf,sizeof(dis)); dis[1]=0; Q.push(nod(1,0));//初始态,N为出发点 while(!Q.empty())&#123; nod temp = Q.top(); int pos = temp.pos; int d = temp.d; Q.pop(); if(d &gt; dis[pos]) continue; //遍历邻接表更新相邻点的最短距离 for(int i = 0; i &lt; E[pos].size(); ++i)&#123; int to = E[pos][i].to; int val = E[pos][i].val; int nd = d + val; if(nd &lt; dis[to])&#123; dis[to] = nd; Q.push(nod(to,nd)); &#125; &#125; &#125; for(int i = 1; i &lt;= N; ++i) ans+=dis[i];&#125;int main()&#123; scanf("%d",&amp;T); while(T--)&#123; scanf("%d%d",&amp;N,&amp;M); for(int i = 0; i &lt; M; ++i)&#123; int f,t,v; scanf("%d%d%d",&amp;f,&amp;t,&amp;v); from[i]=f;to[i]=t;val[i]=v; E[from[i]].push_back(edge(to[i],val[i])); &#125; ans = 0; dij(); for(int i = 1; i &lt;= N; ++i) E[i].clear(); for(int i = 0; i &lt; M; ++i) E[to[i]].push_back(edge(from[i],val[i])); dij(); for(int i = 1; i &lt;= N; ++i) E[i].clear(); printf("%lld\n",ans); &#125; return 0;&#125; F Heavy Transportation(POJ-1797)题目地址：VJ题意：给若干个点和边，求一条从1号点到N号点的路径，使路径上最长边的值最大。解题：类似最短路，只不过最短路的定义变了。AC代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475#include &lt;iostream&gt;#include &lt;queue&gt;#include &lt;cstring&gt;#include &lt;algorithm&gt;const int maxn = 1000+50;const int inf = 1e6;using namespace std;struct edge&#123; int to; int val; edge(int a = 0,int b = 0)&#123;to=a;val=b;&#125;&#125;;struct nod&#123; int pos; int d; nod(int a = 0,int b = 0)&#123;pos=a;d=b;&#125; //优先队列重载大于符号 friend bool operator &lt; (nod a, nod b)&#123; return a.d&lt;b.d; &#125;&#125;;//邻接表vector&lt;edge&gt; E[maxn];int T,N,dis[maxn],m,kase;//dis[i]为从X到i的最短距离，可以根据情况扩充为d[i][j][k].....//加边，无向图时添加两条边void add(int f,int t,int v)&#123; E[f].push_back(edge(t,v)); E[t].push_back(edge(f,v)); return;&#125;void dij()&#123; memset(dis,0,sizeof(dis)); priority_queue&lt; nod,vector&lt;nod&gt; &gt; Q; Q.push(nod(1,inf));//初始态,N为出发点 while(!Q.empty())&#123; nod temp = Q.top(); int pos = temp.pos; int d = temp.d; Q.pop(); if(d &lt; dis[pos]) continue; dis[pos]=d; //遍历邻接表更新相邻点的最短距离 for(int i = 0; i &lt; E[pos].size(); ++i)&#123; int to = E[pos][i].to; int val = E[pos][i].val; int nd = min(d,val); if(nd &gt; dis[to])&#123; dis[to] = nd; Q.push(nod(to,nd)); &#125; &#125; &#125;&#125;int main()&#123; ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); cin &gt;&gt; T; while(T--)&#123; cin &gt;&gt; N &gt;&gt; m; while(m--)&#123; int f,t,v; cin &gt;&gt; f &gt;&gt; t &gt;&gt; v; E[f].push_back(edge(t,v)); E[t].push_back(edge(f,v)); &#125; dij(); cout &lt;&lt; "Scenario #" &lt;&lt; ++kase &lt;&lt; ":\n"; cout &lt;&lt; dis[N] &lt;&lt; endl &lt;&lt; endl; memset(dis,0,sizeof(dis)); for(int i = 1; i &lt;= N; ++i) E[i].clear(); &#125;&#125; G Arbitrage(POJ-2240)题目地址：VJ题意：能不能套汇？解题：floyd裸题（以前的代码对每一个点做Bellman-Ford竟然过了hdu的这题。。POJ这题只能用floyd）。 H Wormholes(poj-3259)题目地址：VJ解题：SPFA判负环裸题。 I Subway(POJ-2502)题目地址：VJ题意：小明要从家到学校，可以走路或走地铁，给出家、学校、地铁站的坐标（有多条地铁），求到学校至少要多久。解题：最短路，家为1号点，学校为2号点，地铁站为后面的点，同一条地铁线路上的点之间的时间为距离/地铁速度，除此之外的为距离/步行速度，最后从1号点到2号点的最短时间就是答案。tips：需要注意的是这道题里的距离是欧几里得距离而不是曼哈顿距离，以及注意单位的换算。AC代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102#include &lt;iostream&gt;#include &lt;queue&gt;#include &lt;cstring&gt;#include &lt;algorithm&gt;#include &lt;vector&gt;#include &lt;cstdio&gt;#include &lt;cmath&gt;const int maxn = 1000+50;const int inf = 0x3f3f3f3f;const double subspeed = 40 * 1000 / 60;const double conspeed = 10 * 1000 / 60;using namespace std;struct point&#123; double x,y; point(double a=0,double b=0):x(a),y(b)&#123;&#125;&#125;po[maxn];struct edge&#123; int to; double val; edge(int a = 0,double b = 0)&#123;to=a;val=b;&#125;&#125;;struct nod&#123; int pos; double d; nod(int a = 0,double b = 0)&#123;pos=a;d=b;&#125; //优先队列重载大于符号 friend bool operator &gt; (nod a, nod b)&#123; return a.d&gt;b.d; &#125;&#125;;//邻接表vector&lt;edge&gt; E[maxn];int N;//dis[i]为从X到i的最短距离，可以根据情况扩充为d[i][j][k].....double dis[maxn];//加边，无向图时添加两条边void add(int f,int t,int v)&#123; E[f].push_back(edge(t,v)); E[t].push_back(edge(f,v)); return;&#125;void dij()&#123; for(int i = 1; i &lt;= N; ++i) dis[i] = 1e10; priority_queue&lt; nod,vector&lt;nod&gt;,greater&lt;nod&gt; &gt; Q; Q.push(nod(1,0));//初始态,N为出发点 while(!Q.empty())&#123; nod temp = Q.top(); int pos = temp.pos; double d = temp.d; Q.pop(); if(d &gt; dis[pos]) continue; dis[pos]=d; //遍历邻接表更新相邻点的最短距离 for(int i = 0; i &lt; E[pos].size(); ++i)&#123; int to = E[pos][i].to; double val = E[pos][i].val; double nd = d + val; if(nd &lt; dis[to])&#123; dis[to] = nd; Q.push(nod(to,nd)); &#125; &#125; &#125;&#125;int main()&#123; ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); cin &gt;&gt; po[1].x &gt;&gt; po[1].y; cin &gt;&gt; po[2].x &gt;&gt; po[2].y; N=2; double tx,ty; while(true)&#123; double ttlen = 0; bool flag=0; int st = N+1; while(cin &gt;&gt; tx &gt;&gt; ty)&#123; if(tx==-1 &amp;&amp; ty==-1) break; N++; po[N].x=tx;po[N].y=ty; if(flag==0) flag=1; else&#123; double dx = abs(tx-po[N-1].x),dy = abs(ty-po[N-1].y); double dis = sqrt(dx*dx+dy*dy); E[N].push_back(edge(N-1,dis/subspeed)); E[N-1].push_back(edge(N,dis/subspeed)); &#125; &#125; if(cin.peek()==EOF) break; &#125; for(int i = 1; i &lt;= N; ++i) for(int j = i+1; j &lt;= N; ++j)&#123; double dx = abs(po[i].x-po[j].x),dy = abs(po[i].y-po[j].y); double dis = sqrt(dx*dx+dy*dy); E[i].push_back(edge(j,dis/conspeed)); E[j].push_back(edge(i,dis/conspeed)); &#125; dij(); cout &lt;&lt; round(dis[2]) &lt;&lt; endl; return 0;&#125; 就到这了，后面两题还没做，也不想补。。（咸鱼.jpg）]]></content>
      <categories>
        <category>ACM暑期集训</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>最小生成树</tag>
        <tag>最短路问题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[暑期集训——线段树篇]]></title>
    <url>%2F2019%2F07%2F31%2FTrainSegTree%2F</url>
    <content type="text"><![CDATA[线段树还是一个很神奇的东西，对区间加法有了新的认识。 VJ帐号：LotusIR，代码基本上都共享了（除了少数实在觉得丢脸的）。很多代码直接复制的板子，有比较多的注释，可以忽略。今天正好有空就把这个补了吧比赛地址：VJ A HDU-1166线段树单点加减和查询板子题，不贴代码了，占空间。。 B HDU-1754同A，这题是单点直接修改的。 C HDU-1394题意自己看吧。解题：总而言之统计出初始状态下数列中的逆序对，你可以用归并排序统计，当然今天的主题是线段树，所以就用权值线段树统计吧。接着开始滚动，我们很容易发现，如果我们把开头的第一个数a1放到数列的末尾，那么会多出n-1-a1个逆序对，同时会减少a1个逆序对，滚动一遍这个数列每次更新答案就能的到最小值了。AC代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243#include &lt;bits/stdc++.h&gt;using namespace std;const int maxn = 5000+200;int tree[maxn],a[maxn],n;void pushup(int rt)&#123; tree[rt] = tree[rt&lt;&lt;1] + tree[rt&lt;&lt;1|1];&#125;//插入一个数字void Insert(int x,int l, int r, int rt)&#123; if(l==r)&#123;tree[rt]++;return;&#125; int m = (l+r) &gt;&gt; 1; if(x &lt;= m) Insert(x,l,m,rt&lt;&lt;1); else Insert(x,m+1,r,rt&lt;&lt;1|1); pushup(rt);&#125;//查询某个区间中数字出现的次数int queryseg(int L,int R,int l,int r,int rt)&#123; if(L &lt;= l &amp;&amp; R &gt;= r) return tree[rt]; int res = 0; int m = (l+r) &gt;&gt; 1; if(L &lt;= m) res += queryseg(L,R,l,m,rt&lt;&lt;1); if(R &gt;= m+1) res += queryseg(L,R,m+1,r,rt&lt;&lt;1|1); return res;&#125;int main()&#123; ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); while(cin &gt;&gt; n)&#123; memset(tree,0,sizeof(tree)); int sum = 0; for(int i = 1; i &lt;= n; ++i)&#123; cin &gt;&gt; a[i]; Insert(a[i],0,n-1,1); sum+=queryseg(a[i]+1,n-1,0,n-1,1); &#125; int ans = sum; for(int i = 1; i &lt;= n; ++i)&#123; sum += n-1-a[i]; sum -= a[i]; ans = min(ans,sum); &#125; cout &lt;&lt; ans &lt;&lt; endl; &#125;&#125; D HDU-1698区间改值的求和线段树板子题，不贴代码了。 E POJ-3468同D，这题是区间加减的板子题。 F POJ-2777状态压缩的线段树，还挺有意思的。题意还是自己看~解题：线段树的节点上存储一个统计量，表示这个线段中所有的颜色的种类。具体的说，如果这个区间上有1,2,3,4，那么这个统计量就是0b1111(二进制，存下来以后是一个int或者ll)，同样的，如果有1,3而没有2,4,那么这个统计量就是0b0101，由于颜色的种类小于30种，所以用int就能存了，以防万一可以用ll，在区间合并的时候采用按位或运算(|)就可以了。AC代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107#include &lt;iostream&gt;#include &lt;cstring&gt;#define FAST ios::sync_with_stdio(0);cin.tie(0);cout.tie(0)typedef long long ll;const int maxn = 1e5+300;const int inf = 0x3f3f3f3f;using namespace std;ll N,a[maxn],Sum[maxn&lt;&lt;2],lazy[maxn&lt;&lt;2],T,O;//更新当前节点void pushup(int rt)&#123; Sum[rt] = Sum[rt&lt;&lt;1] | Sum[rt&lt;&lt;1|1];&#125;//下传函数void pushdown(int l,int r,int rt)&#123; //区间改值 if(lazy[rt])&#123; lazy[rt&lt;&lt;1] = lazy[rt]; lazy[rt&lt;&lt;1|1] = lazy[rt]; Sum[rt&lt;&lt;1] = lazy[rt]; Sum[rt&lt;&lt;1|1] = lazy[rt]; lazy[rt] = 0; &#125; //区间增减 /*if(lazy[rt])&#123; int m = (l+r) &gt;&gt; 1; lazy[rt&lt;&lt;1] += lazy[rt]; lazy[rt&lt;&lt;1|1] += lazy[rt]; Sum[rt&lt;&lt;1] += lazy[rt] * (m-l+1); Sum[rt&lt;&lt;1|1] += lazy[rt] * (r-m); lazy[rt] = 0; &#125;*/&#125;//l:当前节点的左端点 r：当前节点的右端点 rt:当前节点的编号void build(int l,int r,int rt)&#123; if(l == r)&#123; Sum[rt] = a[l]; return; &#125; int m = (l+r) &gt;&gt; 1; build(l,m,rt&lt;&lt;1); build(m+1,r,rt&lt;&lt;1|1); pushup(rt);&#125;//l:当前节点的左端点 r：当前节点的右端点 rt:当前节点的编号 [L,R]查询的区间ll query(int L,int R,int l,int r,int rt)&#123; if(L &lt;= l &amp;&amp; R &gt;= r) return Sum[rt]; int m = (l+r) &gt;&gt; 1; ll res = 0; pushdown(l,r,rt); if(L &lt;= m) res |= query(L,R,l,m,rt&lt;&lt;1); if(R &gt; m) res |= query(L,R,m+1,r,rt&lt;&lt;1|1); return res;&#125;void segupdate(int L,int R,int l,int r,int rt,int lzy)&#123; if(L &lt;= l &amp;&amp; R &gt;= r)&#123; //区间改值 lazy[rt]=lzy; Sum[rt]=lzy; //区间加减 /*lazy[rt]+=lzy; sum[rt]+=(r-l+1) * lzy;*/ return; &#125; int m = (l+r) &gt;&gt; 1; pushdown(l,r,rt); if(L &lt;= m) segupdate(L,R,l,m,rt&lt;&lt;1,lzy); if(R &gt; m) segupdate(L,R,m+1,r,rt&lt;&lt;1|1,lzy); pushup(rt); return;&#125;int getans(ll a)&#123; int cnt = 0; while(a)&#123; if(a&amp;1) cnt++; a &gt;&gt;= 1; &#125; return cnt;&#125;int main()&#123; FAST; cin &gt;&gt; N &gt;&gt; T &gt;&gt; O; memset(lazy,0,sizeof(lazy)); for(int i = 1; i &lt;= N; ++i) a[i]=1; build(1,N,1); char op; while(O--)&#123; cin &gt;&gt; op; if(op=='C')&#123; int L,R,C; cin &gt;&gt; L &gt;&gt; R &gt;&gt; C; if(L&gt;R) swap(L,R); segupdate(L,R,1,N,1,(1&lt;&lt;(C-1))); &#125; else if(op=='P')&#123; int L,R; cin &gt;&gt; L &gt;&gt; R; if(L&gt;R) swap(L,R); cout &lt;&lt; getans(query(L,R,1,N,1))&lt;&lt;endl; &#125; &#125;&#125; G HDU-1542矩形平面交面积，还没做也还没看，下次看情况更新吧，如果还有下次的话 H HDU-4027区间开根号，按照ppt上的做法找着码就能过了。其实就是在暴力修改每一个值的基础上加了一个剪枝。AC代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263#include &lt;bits/stdc++.h&gt;#define FAST ios::sync_with_stdio(0);cin.tie(0);cout.tie(0)typedef long long ll;const int maxn = 1e5+300;const int inf = 0x3f3f3f3f;using namespace std;ll N,M,a[maxn],Sum[maxn&lt;&lt;2],T,X,Y,kase;//更新当前节点void pushup(int rt)&#123; Sum[rt] = Sum[rt&lt;&lt;1] + Sum[rt&lt;&lt;1|1];&#125;//l:当前节点的左端点 r：当前节点的右端点 rt:当前节点的编号void build(int l,int r,int rt)&#123; if(l == r)&#123; Sum[rt] = a[l]; return; &#125; int m = (l+r) &gt;&gt; 1; build(l,m,rt&lt;&lt;1); build(m+1,r,rt&lt;&lt;1|1); pushup(rt);&#125;//l:当前节点的左端点 r：当前节点的右端点 rt:当前节点的编号 [L,R]查询的区间ll query(int L,int R,int l,int r,int rt)&#123; if(L &lt;= l &amp;&amp; R &gt;= r) return Sum[rt]; int m = (l+r) &gt;&gt; 1; ll res = 0; if(L &lt;= m) res += query(L,R,l,m,rt&lt;&lt;1); if(R &gt; m) res += query(L,R,m+1,r,rt&lt;&lt;1|1); return res;&#125;void segupdate(int L,int R,int l,int r,int rt)&#123; if(l==r)&#123;Sum[rt] = floor(sqrt(Sum[rt]));return;&#125; if(query(l,r,1,N,1)==r-l+1) return; int m = (l+r) &gt;&gt; 1; if(L &lt;= m) segupdate(L,R,l,m,rt&lt;&lt;1); if(R &gt; m) segupdate(L,R,m+1,r,rt&lt;&lt;1|1); pushup(rt); return;&#125;int main()&#123; FAST; while(cin &gt;&gt; N)&#123; cout &lt;&lt; "Case #" &lt;&lt; ++kase &lt;&lt; ":\n"; for(int i = 1; i &lt;= N; ++i) cin &gt;&gt; a[i]; build(1,N,1); cin &gt;&gt; M; while(M--)&#123; cin &gt;&gt; T &gt;&gt; X &gt;&gt; Y; if(X&gt;Y) swap(X,Y); if(T==0) segupdate(X,Y,1,N,1); if(T==1) cout &lt;&lt; query(X,Y,1,N,1) &lt;&lt; endl; &#125; cout &lt;&lt; endl; &#125;&#125; I HYSBZ-1018神奇的一道题，线段树的节点维护区间内4个顶点的连通性以及中点的联通性，合并区间时按着图合并就行了。（应该可以用向右的延伸性代替中点的联通性，带我改了没过，可能还有啥细节吧。。）AC代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100#include &lt;bits/stdc++.h&gt;typedef long long ll;const int maxn = 1e5+300;const int inf = 0x3f3f3f3f;using namespace std;int N;struct node&#123; bool lt_rt; bool lt_rb; bool lt_lb; bool lb_rt; bool lb_rb; bool rt_rb; bool t_m; bool b_m;&#125;tree[maxn &lt;&lt; 2];void pushup(node &amp;now,node l,node r)&#123; now.lt_rt =(l.lt_rt &amp; now.t_m &amp; r.lt_rt) | (l.lt_rb &amp; now.b_m &amp; r.lb_rt); now.lt_rb =(l.lt_rt &amp; now.t_m &amp; r.lt_rb) | (l.lt_rb &amp; now.b_m &amp; r.lb_rb); now.lb_rt =(l.lb_rt &amp; now.t_m &amp; r.lt_rt) | (l.lb_rb &amp; now.b_m &amp; r.lb_rt); now.lb_rb =(l.lb_rt &amp; now.t_m &amp; r.lt_rb) | (l.lb_rb &amp; now.b_m &amp; r.lb_rb); now.lt_lb =l.lt_lb | (l.lt_rt &amp; now.t_m &amp; r.lt_lb &amp; now.b_m &amp; l.lb_rb); now.rt_rb =r.rt_rb | (r.lt_rt &amp; now.t_m &amp; l.rt_rb &amp; now.b_m &amp; r.lb_rb);&#125;void build(int l,int r,int rt)&#123; if(l==r)&#123; tree[rt].lt_rt=tree[rt].lb_rb=1; tree[rt].t_m=tree[rt].b_m=1; return; &#125; int m = (l+r) &gt;&gt; 1; build(l,m,rt&lt;&lt;1); build(m+1,r,rt&lt;&lt;1|1);&#125;void update1(int c,int r,int val,int L,int R,int rt)&#123; int m = (L+R) &gt;&gt; 1; if(m==c)&#123; if(r==1) tree[rt].t_m=val; if(r==2) tree[rt].b_m=val; pushup(tree[rt],tree[rt&lt;&lt;1],tree[rt&lt;&lt;1|1]); return; &#125; if(c&lt;=m)update1(c,r,val,L,m,rt&lt;&lt;1); else update1(c,r,val,m+1,R,rt&lt;&lt;1|1); pushup(tree[rt],tree[rt&lt;&lt;1],tree[rt&lt;&lt;1|1]);&#125;void update2(int c,int val,int l,int r,int rt)&#123; if(l==r)&#123; tree[rt].lt_rb=tree[rt].lt_lb=tree[rt].rt_rb=tree[rt].lb_rt=val; return; &#125; int m = (l+r) &gt;&gt; 1; if(c&lt;=m)update2(c,val,l,m,rt&lt;&lt;1); else update2(c,val,m+1,r,rt&lt;&lt;1|1); pushup(tree[rt],tree[rt&lt;&lt;1],tree[rt&lt;&lt;1|1]);&#125;node query(int c1,int c2,int l,int r,int rt)&#123; int m = (l+r) &gt;&gt; 1; if(c1&lt;=l&amp;&amp;c2&gt;=r) return tree[rt]; if(c2 &lt;= m) return query(c1,c2,l,m,rt&lt;&lt;1); else if(c1 &gt;= m+1) return query(c1,c2,m+1,r,rt&lt;&lt;1|1); else&#123; node res = tree[rt]; pushup(res,query(c1,c2,l,m,rt&lt;&lt;1),query(c1,c2,m+1,r,rt&lt;&lt;1|1)); return res; &#125;&#125;int main()&#123; scanf("%d",&amp;N); build(1,N,1); char op[10]; while(scanf("%s",op))&#123; if(op[0]=='E') break; int c1,c2,r1,r2,val; scanf("%d%d%d%d",&amp;r1,&amp;c1,&amp;r2,&amp;c2); if(c1&gt;c2) swap(c1,c2),swap(r1,r2); if(op[0] == 'A')&#123; node n1=query(1,c1,1,N,1),n2=query(c1,c2,1,N,1),n3=query(c2,N,1,N,1); bool ans; if(r1==1 &amp;&amp; r2==1) ans = n2.lt_rt | (n1.rt_rb &amp; n2.lb_rt) | (n3.lt_lb &amp; n2.lt_rb) | (n3.lt_lb &amp; n1.rt_rb &amp; n2.lb_rb); if(r1==1 &amp;&amp; r2==2) ans = n2.lt_rb | (n1.rt_rb &amp; n2.lb_rb) | (n3.lt_lb &amp; n2.lt_rt) | (n3.lt_lb &amp; n1.rt_rb &amp; n2.lb_rt); if(r1==2 &amp;&amp; r2==1) ans = n2.lb_rt | (n1.rt_rb &amp; n2.lt_rt) | (n3.lt_lb &amp; n2.lb_rb) | (n3.lt_lb &amp; n1.rt_rb &amp; n2.lt_rb); if(r1==2 &amp;&amp; r2==2) ans = n2.lb_rb | (n1.rt_rb &amp; n2.lt_rb) | (n3.lt_lb &amp; n2.lb_rt) | (n3.lt_lb &amp; n1.rt_rb &amp; n2.lt_rt); puts(ans?"Y":"N"); &#125; else&#123; val = (op[0]=='O'?1:0); if(c1==c2) update2(c1,val,1,N,1); else update1(c1,r1,val,1,N,1); &#125; &#125;&#125; 区间加法好了今天的题就到这里了，最后说一下区间加法。什么是区间加法呢？简单来说，把一个大的区间分割成两个小的区间，如果能从小区间的统计量推算出大区间的统计量，那么这个统计量就是符合区间加法的。比如在今天的H题中，显然可以从小区间的颜色种类推出大区间的颜色种类，当然也有更复杂也更神奇一些的，比如在I题中，从小区间的联通性可以推知大区间的联通性，再比如说实际上gcd也是符合区间加法的，诸如此类的还有很多，都可以用线段树来进行维护。在线段树的代码中，有一个叫做pushup的函数，实际上这个函数就是用子区间做区间加法来更新母区间，尽管平时我们只用它来自下而上地更新线段树，但如果区间加法的过程较为复杂，我们也可以用这个函数来做区间加法，就像I题中那样。]]></content>
      <categories>
        <category>ACM暑期集训</category>
      </categories>
      <tags>
        <tag>线段树</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[暑期集训第一周]]></title>
    <url>%2F2019%2F07%2F29%2FTrain1st%2F</url>
    <content type="text"><![CDATA[前言暑期集训开始了呢！一点都不兴奋呢！好吧不扯淡了，第一周学了STL、动态规划、搜索、数论等相关内容。 STL讲道理STL、C++的训练题真是一点意思也没有，全是模拟，没什么特别的题，先贴一个或许会用的到的函数吧（貌似以前就说过但不怎么用。。）。lower_bound(a,a+N,ask)函数,找到在a~a[N-1]范围内第一个比ask大的元素（可能是数字也可能是字符串、字符等）。返回一个指针，将这个指针减去a可以得到下标，由于是用二分实现，复杂度为log(n)。然后的话队列套队列挺有意思的（也可以各种STL嵌套），就贴这道题吧。 UVA-540VJ地址：UVA540题意简述：有若干个人排队，每个人有一个所属的队伍，当一个新来的人进入队列时，如果有队友在队列中，则插入最后一个队友的后面，否则排到队尾。ENQUEUE x代表x号进入队伍，DEQUEUE代表队列第一人出队，对于每一次DEQUEUE输出出队的人的编号，STOP停止模拟。解题：模拟就完事了，维护一个队伍的队列和队伍内的队列。AC代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152#include &lt;bits/stdc++.h&gt;const int maxn = 1e3+200;using namespace std;queue&lt;int&gt; teamqueue;queue&lt;int&gt; manqueue[maxn];map&lt;int,int&gt; Team;bool inqueue[maxn];int t,a,n,kase;string op;int main()&#123; while(cin &gt;&gt; t)&#123; if(t==0) break; cout &lt;&lt; "Scenario #" &lt;&lt; ++kase &lt;&lt; endl; for(int i = 1; i &lt;= t; ++i)&#123; cin &gt;&gt; n; while(n--)&#123; cin &gt;&gt; a; Team[a]=i; &#125; &#125; while(cin &gt;&gt; op)&#123; if(op=="STOP") break; if(op=="ENQUEUE")&#123; cin &gt;&gt; a; if(inqueue[Team[a]]) manqueue[Team[a]].push(a); else&#123; manqueue[Team[a]].push(a); teamqueue.push(Team[a]); inqueue[Team[a]]=true; &#125; &#125; if(op=="DEQUEUE")&#123; int teamid=teamqueue.front(); int manid=manqueue[teamid].front(); manqueue[teamid].pop(); if(manqueue[teamid].empty())&#123; teamqueue.pop(); inqueue[teamid]=false; &#125; cout &lt;&lt; manid &lt;&lt; endl; &#125; &#125; cout &lt;&lt; endl; for(int i = 1; i &lt;= t; ++i) while(!manqueue[i].empty()) manqueue[i].pop(); while(!teamqueue.empty()) teamqueue.pop(); memset(inqueue,0,sizeof(inqueue)); &#125; return 0;&#125; 其实也挺无聊的。。而且UVA的格式要求真的是有毒。。 贪心贪心算法怎么说呢。。反正我不太擅长，可能我不够贪吧。。直接上题了。 POJ1700-Crossing RiverVJ地址：POJ1700题意简述：经典的过河问题。有N个人和1条船，第i个人过河需要的时间为ai，船能载两个人，船过河的时间是两个人中较慢的那个人的时间，问把所有人运过河至少需要多少时间。解题：想着让最快的人不停带人过去再回来，然后发现是错的。。因为还有另一种策略，最快的和第二快的一起过去，然后最快的回来，接着最慢的和第二慢的过去，b回来。这两种策略中选择一个较快的就是答案，此外当人数小于等于3时直接处理即可。AC代码： 123456789101112131415161718192021222324252627282930313233343536373839#include &lt;iostream&gt;#include &lt;algorithm&gt;#include &lt;queue&gt;#include &lt;string&gt;typedef long long ll;const int inf = 0x3f3f3f3f;const int maxn = 1500;using namespace std;int T,N,a[maxn],ans;int main()&#123; cin &gt;&gt; T; while(T--)&#123; ans=0; cin &gt;&gt; N; for(int i = 0; i &lt; N; ++i) cin &gt;&gt; a[i]; sort(a,a+N); if(N &lt;= 3)&#123; if(N==1) ans = a[0]; if(N==2) ans = a[1]; if(N==3) ans = a[0]+a[1]+a[2]; &#125; else&#123; for(int i = N-1; i &gt; 1; i-=2)&#123; if(i &gt;= 3)&#123; if(a[0]+a[i-1]&gt;=2*a[1]) ans+=a[1]+a[0]+a[i]+a[1]; else ans+=a[i]+a[0]+a[i-1]+a[0]; &#125; else ans += a[2] + a[0]; &#125; ans += a[1]; &#125; cout &lt;&lt; ans &lt;&lt; endl; &#125;&#125; POJ3253-Fence RepaierVJ地址：POJ3253题意：哈夫曼树经典例题。AC代码： 12345678910111213141516171819202122232425262728#include &lt;iostream&gt;#include &lt;algorithm&gt;#include &lt;queue&gt;typedef long long ll;const int inf = 0x3f3f3f3f;const int maxn = 5e4+500;using namespace std;ll n,input,sum,ans;int main()&#123; priority_queue&lt; ll,vector&lt;ll&gt;,greater&lt;ll&gt; &gt; pq; cin &gt;&gt; n; for(ll i = 0; i &lt; n; ++i)&#123; cin &gt;&gt; input; pq.push(input); &#125; while(pq.size()&gt;1)&#123; ll min1 = pq.top(); pq.pop(); ll min2 = pq.top(); pq.pop(); ans += min1+min2; pq.push(min1+min2); &#125; cout &lt;&lt; ans &lt;&lt; endl; return 0;&#125; 剩下几道比较简单或者不会，不想补了（咸鱼） 搜索搜索比较简单，暴力就完事了，贴两道状压搜索。 HDU1429-胜利大逃亡VJ地址：HDU1429题意：捡钥匙走迷宫，问能否在指定时间走出迷宫。解题：在BFS的基础上用一个int来存储角色获得的钥匙的状态，然后进行朴素的BFS即可。AC代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566#include &lt;bits/stdc++.h&gt;using namespace std;const int zt=0b111111111111;const int maxn = 22;const int dir[4][2]=&#123;1,0,-1,0,0,1,0,-1&#125;;struct node&#123; int x,y,dep,key; node(int a,int b,int c,int d):x(a),y(b),dep(c),key(d)&#123;&#125;&#125;;char mp[maxn][maxn];int stx,sty,ans,dep[maxn][maxn][zt],n,m,t;void solve()&#123; memset(dep,-1,sizeof(dep)); ans = -1; queue&lt;node&gt; q; dep[stx][sty][0]=0; q.push(node(stx,sty,0,0)); while(!q.empty())&#123; node u = q.front(); q.pop(); int nkey=u.key; if(u.dep&gt;=t) break; if(mp[u.x][u.y]=='^')&#123; ans=u.dep; break; &#125; if(mp[u.x][u.y] &gt;= 'a' &amp;&amp; mp[u.x][u.y] &lt;= 'j') nkey |= (1 &lt;&lt; (mp[u.x][u.y]-'a')); for(int i = 0; i &lt; 4; ++i)&#123; int nx=u.x+dir[i][0],ny=u.y+dir[i][1]; if(nx &lt; 1 || nx &gt; n || ny &lt; 1 || ny &gt; m) continue; if(mp[nx][ny]=='*') continue; if(mp[nx][ny]=='.' || mp[nx][ny]=='@' || (mp[nx][ny] &gt;= 'a' &amp;&amp; mp[nx][ny] &lt;= 'j') || mp[nx][ny] == '^') if(dep[nx][ny][nkey]==-1)&#123; dep[nx][ny][nkey]=u.dep+1; q.push(node(nx,ny,u.dep+1,nkey)); &#125; if(mp[nx][ny]&gt;='A'&amp;&amp;mp[nx][ny]&lt;='J') if(nkey &amp; (1 &lt;&lt; mp[nx][ny]-'A')) if(dep[nx][ny][nkey]==-1)&#123; dep[nx][ny][nkey]=u.dep+1; q.push(node(nx,ny,u.dep+1,nkey)); &#125; &#125; &#125;&#125;int main()&#123; while(cin &gt;&gt; n &gt;&gt; m &gt;&gt; t)&#123; for(int i=1;i&lt;=n;++i) for(int j=1;j&lt;=m;++j)&#123; cin &gt;&gt; mp[i][j]; if(mp[i][j]=='@')&#123; stx=i; sty=j; &#125; &#125; solve(); cout &lt;&lt; ans &lt;&lt; endl; &#125; return 0;&#125; 代码可能丑了点，不过难得搜索题一发AC！ CF||SHU||牛客-CSL的校园卡VJ地址：CSL的校园卡解题：不仅加入了一个状态记录走过的路径，而且有两个点，于是VIS[x][y]变成了vis[path][x1][y1][x2][y2]。接着进行BFS就行了。AC代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778#include &lt;iostream&gt;#include &lt;queue&gt;using namespace std;const int maxn = 0b1111111111111111;const int inf = 0x3f3f3f3f;int n,m,tar,vis[maxn][5][5][5][5],mp[5][5],stx,sty,ans;int dir[4][2]=&#123;&#123;1,0&#125;,&#123;-1,0&#125;,&#123;0,1&#125;,&#123;0,-1&#125;&#125;;char input;struct node&#123; int x1,y1; int x2,y2; int now; int dep; node(int a=0,int b=0,int c=0,int d=0,int e=0,int f=0):x1(a),y1(b),x2(c),y2(d),now(e),dep(f)&#123;&#125;&#125;;bool legal(int x,int y)&#123; if(x&gt;=0&amp;&amp;y&gt;=0&amp;&amp;x&lt;n&amp;&amp;y&lt;m&amp;&amp;mp[x][y]==1) return true; else return false;&#125;void BFS()&#123; queue&lt;node&gt; q; q.push(node(stx,sty,stx,sty,1&lt;&lt;(stx*m+sty),0)); vis[1&lt;&lt;(stx*m+sty)][stx][sty][stx][sty]=1; while(!q.empty())&#123; int x1,y1,x2,y2,now,dep; x1=q.front().x1; y1=q.front().y1; x2=q.front().x2; y2=q.front().y2; now=q.front().now; dep=q.front().dep; q.pop(); //cout &lt;&lt; x1 &lt;&lt; " " &lt;&lt; y1 &lt;&lt; " " &lt;&lt; x2 &lt;&lt; " " &lt;&lt; y2 &lt;&lt; " " &lt;&lt; now &lt;&lt; " " &lt;&lt; dep &lt;&lt; " " &lt;&lt; tar &lt;&lt; endl; if(now==tar)&#123; ans=dep; break; &#125; for(int i = 0; i &lt; 4; i++)&#123; int newx1,newy1,tmp; newx1=x1+dir[i][0];newy1=y1+dir[i][1]; if(!legal(newx1,newy1)) continue; for(int j = 0; j &lt; 4; j++)&#123; int newx2,newy2; newx2=x2+dir[j][0];newy2=y2+dir[j][1]; if(legal(newx2,newy2)) tmp = now | (1&lt;&lt;(newx2*m+newy2)) | (1&lt;&lt;(newx1*m+newy1)); else continue; if(!vis[tmp][newx1][newy1][newx2][newy2])&#123; vis[tmp][newx1][newy1][newx2][newy2]=1; q.push(node(newx1,newy1,newx2,newy2,tmp,dep+1)); &#125; &#125; &#125; &#125;&#125;int main()&#123; cin &gt;&gt; n &gt;&gt; m; for(int i = 0; i &lt; n; ++i) for(int j = 0; j &lt; m; ++j)&#123; cin &gt;&gt; input; if(input == 'X') mp[i][j]=0; else&#123; mp[i][j]=1; tar |= (1&lt;&lt;(i*m+j)); &#125; if(input == 'S')&#123; stx=i; sty=j; &#125; &#125; BFS(); cout &lt;&lt; ans;&#125; 倒也不难，但没接触过状压搜索的话估计想不到。 搜索就这样了，反正就是各种暴力。 动态规划DP。。。DP咋办呢，我实在时不会啊emmmm LCS（最长公共子序列）VJ地址：HDU1159题意：LCS裸题，经典DP应用，直接上代码了。AC代码： 1234567891011121314151617181920212223242526#include &lt;bits/stdc++.h&gt;const int maxn = 200;using namespace std;string s1,s2;int lcs(string s1, string s2) &#123; int len1 = s1.size(); int len2 = s2.size(); vector&lt;vector&lt;int&gt;&gt; c(len1+1, vector&lt;int&gt;(len2+1, 0)); for (int i = 1 ; i &lt;= len1; i++) &#123; for(int j = 1; j &lt;=len2 ; j++) &#123; if (s1[i-1] == s2[j-1]) c[i][j] = c[i - 1][j - 1] + 1; else if (c[i - 1][j] &gt;= c[i][j - 1]) c[i][j] = c[i - 1][j]; else c[i][j] = c[i][j - 1]; &#125; &#125; return c[len1][len2];&#125;int main()&#123; while(cin &gt;&gt; s1 &gt;&gt; s2)&#123; cout &lt;&lt; lcs(s1,s2) &lt;&lt; endl; &#125; return 0;&#125; CF1105C-Ayoub and Lost ArrayVJ地址：CF1105C题意：给定l,r,n，求在[l,r]内选n个数(可以重复选)，要求这些数的和能被3整除，有几种选法。解题：求出[l,r]范围内被3除余0,1,2的数的个数，从小到大更新dp。dp[i][j]表示选i个数，余数为j的方案数。显然dp[0][0]=0,且有：dp[i+1][0]=dp[i][0]*MOD[0]+dp[i][1]*MOD[2]+dp[i][2]*MOD[1]以此类推，注意取模，最后输出dp[n][0]就是答案，另外统计[l,r]内被3除余数不同的数的个数时不能暴力。。AC代码： 12345678910111213141516171819202122232425#include &lt;bits/stdc++.h&gt;const int maxn = 2e5+100;const int mod = 1e9+7;using namespace std;long long n,l,r,MOD[3],dp[maxn][3];int main()&#123; cin &gt;&gt; n &gt;&gt; l &gt;&gt; r; for(int i = 0; i &lt; 3; ++i) MOD[i]=(r-l+1)/3; for(int i = 0; i &lt; (r-l+1)%3; ++i)&#123; if((l+i)%3==0)MOD[0]++; if((l+i)%3==1)MOD[1]++; if((l+i)%3==2)MOD[2]++; &#125; dp[0][0]=1; for(int i = 1; i &lt;= n; ++i)&#123; dp[i][0] = (dp[i-1][0]*MOD[0]%mod+dp[i-1][1]*MOD[2]%mod+dp[i-1][2]*MOD[1]%mod)%mod; dp[i][1] = (dp[i-1][0]*MOD[1]%mod+dp[i-1][1]*MOD[0]%mod+dp[i-1][2]*MOD[2]%mod)%mod; dp[i][2] = (dp[i-1][0]*MOD[2]%mod+dp[i-1][1]*MOD[1]%mod+dp[i-1][2]*MOD[0]%mod)%mod; &#125; cout &lt;&lt; dp[n][0] &lt;&lt; endl; return 0;&#125; CF1096D-Easy ProblemVJ地址:CF1096D题意：给一个字符串，删去若干个字符，删去每个字符的cost不同，问让这个字符串不含”hard”子序列至少需要多少cost。解题：对于’h’，只能删去所有的’h’，对于’a’，可以删去所有’h’或所有’a’或所有符合顺序的’ha’，以此类推。AC代码： 1234567891011121314151617181920212223242526#include &lt;bits/stdc++.h&gt;const int maxn = 1e5+100;using namespace std;int n;int val[maxn];string s;long long ans,h,a,r,d;int main()&#123; cin &gt;&gt; n; cin &gt;&gt; s; for(int i = 0; i &lt; n; ++i) cin &gt;&gt; val[i]; for(int i = 0; i &lt; n; ++i)&#123; if(s[i]=='h') h+=val[i]; if(s[i]=='a') a=min(h,a+val[i]); if(s[i]=='r') r=min(a,r+val[i]); if(s[i]=='d') d=min(r,d+val[i]); &#125; cout &lt;&lt; d &lt;&lt; endl; return 0;&#125; h,a,r,d分别记录到i位置对于该字母的最优策略，显然后面的字母的最优策略会优于前面的或者等于前面的，其实就是一个dp[4][n]被压缩到1维的结果; HDU1024-Max Sum Plus Plusvj地址：HDU1024题意：自己看吧。。解题：挺神奇的，把2维的dp压缩的过程。（还没很弄懂，以后再回来看看吧）AC代码： 123456789101112131415161718192021222324252627#include &lt;bits/stdc++.h&gt;const int maxn = 1e6+100;const int mod = 1e9+7;const long long inf = 0x3f3f3f3f;using namespace std;int m,n;long long dp[maxn],a[maxn],pre[maxn],mx;int main()&#123; ios::sync_with_stdio(0);cin.tie(0);cout.tie(); while(cin &gt;&gt; m &gt;&gt; n)&#123; memset(dp,0,sizeof(dp)); memset(pre,0,sizeof(pre)); for(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i]; for(int i = 1; i &lt;= m; ++i)&#123; mx = -inf; for(int j = i; j &lt;= n; ++j)&#123; dp[j]=max(dp[j-1],pre[j-1])+a[j]; pre[j-1]=mx; mx=max(mx,dp[j]); &#125; &#125; cout &lt;&lt; mx &lt;&lt; endl; &#125; return 0;&#125; 做了一天的DP感觉自己的DP还是很菜。。 数论今天累了明天吧。 - 2019/7/29]]></content>
      <categories>
        <category>ACM暑期集训</category>
      </categories>
      <tags>
        <tag>-STL -动态规划 -搜索 -数论 -贪心</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HDU09]]></title>
    <url>%2F2019%2F07%2F08%2FHDU09%2F</url>
    <content type="text"><![CDATA[比赛地址：HDU09做了四道。。还行吧。 HDU09A Big binary tree待补 B Ch’s gift题意：给一棵树，点有点权，给两个点，给最小值和最大值，求两点间的路径上点权在[最小值，最大值]范围内的点权之和。解题：树链剖分？还没学，明天看情况补吧。 C CSGO计算几何？大陀螺，待补。 D Dying Light看着像计算几何，待补。 FFF at Valentine题意：给一张有向图，问存不存在两点互不联通。解题：方法一：暴力万岁！对每个点进行BFS判断联通即可。AC代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include &lt;bits/stdc++.h&gt;const int maxn = 1100;using namespace std;int T,m,n,able[maxn][maxn],vis[maxn];vector&lt;int&gt; E[maxn];void BFS(int pos)&#123; memset(vis,0,sizeof(vis)); queue&lt;int&gt; q; q.push(pos); while(!q.empty())&#123; int t = q.front(); q.pop(); if(vis[t]) continue; vis[t]=1; able[pos][t] = 1; for(int i = 0; i &lt; E[t].size(); ++i) if(!vis[E[t][i]]) q.push(E[t][i]); &#125;&#125;int main()&#123; scanf("%d",&amp;T); while(T--)&#123; scanf("%d%d",&amp;n,&amp;m); while(m--)&#123; int f,t; scanf("%d%d",&amp;f,&amp;t); E[f].push_back(t); &#125; for(int i = 1; i &lt;= n; ++i) BFS(i); bool flag = true; for(int i = 1; i &lt;= n &amp;&amp; flag; ++i)&#123; for(int j = 1; j &lt;= n &amp;&amp; flag; ++j)&#123; if(!able[i][j] &amp;&amp; !able[j][i]) flag = false; &#125; &#125; if(!flag) puts("Light my fire!"); else puts("I love you my love and our love save us!"); for(int i = 1; i &lt;= n; ++i) E[i].clear(); memset(able,0,sizeof(able)); &#125; return 0;&#125; 时间卡的比较紧。。还好数据不强。 方法二：tarjan+拓扑排序=我不会代码：CSDN博客 Senior Pan题意：给一张有向图，给一个点集，求点集中最短路的最小值。解题：方法一：构造一个超级源点，连接所有点集中的点且边权为0。超级源点到点集中点的最短路的最小值就是点集中最短路的最小值，跑一次dij就好了。注意最小值可能是一个点到自己的距离，要把这种情况排除。 tips:添加超级源点可以通过把所有与超级源点相连的点push进queue实现，不必真的添加源点。 AC代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788#include &lt;bits/stdc++.h&gt;const int maxn = 100000+400;const int inf = 0x3f3f3f3f;using namespace std;struct edge&#123; int to; int val; edge(int a = 0,int b = 0)&#123;to=a;val=b;&#125;&#125;;struct nod&#123; int pos; int d; int from; nod(int a = 0,int b = 0,int c = 0)&#123;pos=a;d=b;from=c;&#125; friend bool operator &gt; (nod a, nod b)&#123; return a.d&gt;b.d; &#125;&#125;;vector&lt;edge&gt; E[maxn];vector&lt;int&gt; beg;int T,n,m,k,dis[maxn],mndis = inf,vis[maxn];void add(int f,int t,int v)&#123; E[f].push_back(edge(t,v)); return;&#125;void dij()&#123; memset(dis,inf,sizeof(dis)); priority_queue&lt; nod,vector&lt;nod&gt;,greater&lt;nod&gt; &gt; Q; for(int i = 0; i &lt; beg.size(); ++i) Q.push(nod(beg[i],0,beg[i])); while(!Q.empty())&#123; nod temp = Q.top(); int pos = temp.pos; int d = temp.d; int from = temp.from; Q.pop(); if(d &gt; dis[pos]) continue; for(int i = 0; i &lt; E[pos].size(); ++i)&#123; int to = E[pos][i].to; int val = E[pos][i].val; int nd = d + val; if(vis[to] &amp;&amp; to != from) mndis = min(mndis,nd); if(nd &lt; dis[to])&#123; dis[to] = nd; Q.push(nod(to,nd,vis[to]?to:from)); &#125; &#125; &#125;&#125;void reset()&#123; beg.clear(); for(int i = 1; i &lt;= n; ++i) E[i].clear(); mndis = inf; memset(vis,0,sizeof(vis));&#125;int main()&#123; ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); cin &gt;&gt; T; int kase = 0; while(T--)&#123; cin &gt;&gt; n &gt;&gt; m; while(m--)&#123; int from,to,val; cin &gt;&gt; from &gt;&gt; to &gt;&gt; val; add(from,to,val); &#125; cin &gt;&gt; k; while(k--)&#123; int x; cin &gt;&gt; x; beg.push_back(x); vis[x]=1; &#125; dij(); cout &lt;&lt; "Case #" &lt;&lt; ++kase &lt;&lt; ": " &lt;&lt; mndis &lt;&lt; endl; reset(); &#125; return 0;&#125; 方法二：最短路+随机=我又不会代码：CSDN博客 G Missile Interception待补 H Numbers题意：给两个数列a和数列b，数列b中的每一个数的值是数列a中两个数的和。如a为1，2，3，那么b为1+2，1+3，2+3也就是3，4，5。解题：前两个数一定是a中的数，他们的和一定是b中的一个数，向后循环，每在a中加入一个数从数列中删去所有这个数能产生的和。用map维护。总之就是暴力模拟。。AC代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include &lt;bits/stdc++.h&gt;using namespace std;const int maxn = 125251;const int INF = 0x3f3f3f3f;int str[maxn];int m,n;vector&lt;int&gt; a;map&lt;int,int&gt; b; //记录first在b中出现的次数int main()&#123; while(scanf("%d",&amp;m)!=EOF) &#123; n = (-1 + sqrt(1 + 8 * m)) / 2; for(int i=0;i&lt;m;i++) scanf("%d",&amp;str[i]); sort(str,str+m); a.clear(); b.clear(); a.push_back(str[0]); a.push_back(str[1]); b[a[0] + a[1]]++; for(int i=2;i&lt;m;i++) &#123; if(b[str[i]]) &#123; b[str[i]]--; continue; &#125; else &#123; a.push_back(str[i]); for(int j=0;j&lt;a.size()-1;j++) &#123; int sum = a[j] + str[i]; b[sum]++; &#125; &#125; &#125; printf("%d\n",n); for(int i=0;i&lt;n-1;i++) &#123; printf("%d ",a[i]); &#125; printf("%d\n",a[n-1]); &#125;&#125; I Senior PanⅡ待补。 J Two strings字符串匹配，dp，队友太猛了。AC代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445#include&lt;bits/stdc++.h&gt;using namespace std;typedef long long ll;const int maxn = 2500 + 10;char a[maxn],b[maxn];int dp[maxn][maxn];int main()&#123; int T;scanf("%d",&amp;T); while(T --) &#123; scanf("%s%s",a+1,b+1); int la = strlen(a+1),lb = strlen(b+1); bool flag = true; int j = 1;memset(dp,0,sizeof(dp)); dp[0][0] = 1; for(int i = 1; i &lt;= la; i ++) &#123; for(int j = 1; j &lt;= lb; j ++) &#123; if(a[i] == b[j]) &#123; if( (b[j + 1] == '*' &amp;&amp; dp[i][j - 1]) || dp[i - 1][j - 1] == 1)dp[i][j] = 1; if(b[j - 1] == '*' &amp;&amp; ( dp[i - 1][j - 3] || dp[i][j - 1]) )dp[i][j] = 1; &#125; else if(b[j] == '.') &#123; if(dp[i - 1][j - 1])dp[i][j] = 1; &#125; else if(b[j] == '*') &#123; if(a[i - 1] == a[i] &amp;&amp; (dp[i - 1][j] || dp[i - 1][j - 1]) )dp[i][j] = 1; if(b[j - 1] == '.' &amp;&amp; dp[i - 1][j - 1] &amp;&amp; a[i] == a[i - 1])dp[i][j] = 1; if(dp[i][j - 2] || dp[i][j - 1] )dp[i][j] = 1; &#125; else dp[i][j] = 0; &#125; &#125; if(dp[la][lb]) printf("yes\n"); else printf("no\n"); &#125; return 0;&#125;]]></content>
      <categories>
        <category>ACM自闭日记</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>暴力</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[排列组合笔记]]></title>
    <url>%2F2019%2F07%2F04%2Fcombination%2F</url>
    <content type="text"><![CDATA[密码是我学号~（小技巧怎么能分享呢hhhhhhh） Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>排列组合</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ACM暑期训练赛（HDU08）]]></title>
    <url>%2F2019%2F07%2F04%2FHDU08%2F</url>
    <content type="text"><![CDATA[2019/7/4 真TM热今天的比赛是英语阅读专场。 比赛地址：HDU08由于是英语阅读专场（星战粉专场）只给做出来的题的题意和题解了。。真的不想翻译有多阅读专场？建议阅读H题。 HDU08A Army Formations数据结构题，不会。 B Battlestation Operational没看，天澜大佬做出来了，不知道有多难。 C Casual Podracing没看，不翻译了。 D Death Podracing没看。 E Engineering of the Clones没看。 F Fleet of the Eternal Throne题意：有点难解释，自己看吧。。解题：杭电真喜欢AC自动机把给出的模式串构造AC自动机，AC自动机的节点记录当前字符串的长度，对于给出的X和Y，先把字符串X在AC自动机上跑一遍，记录所有匹配到的节点（包括fail节点，不一定是字符串的结束节点），这些匹配到的节点既是某个模式串的前缀，又是X的子串。再把字符串Y在AC自动机上跑一遍，匹配到已经被标记过的节点时更新最长长度，最后输出即可。这题的输入有点坑，模式串一共1e5行，但模式串的总长又不超过1e5，写输入写了好久。。AC代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166#include &lt;bits/stdc++.h&gt;const int maxn = 1e5 + 500;const int inf = 0x3f3f3f3f;using namespace std;struct trie&#123; trie *nxt[26]; trie *fail; int len; bool flag; trie() &#123; len = 0; flag = 0; fail = NULL; memset(nxt,NULL,sizeof(nxt)); &#125;&#125;;trie *root;int T,n,m,x,y,pos[maxn];char S[maxn],s1[maxn],s2[maxn];void Insert(char *s)&#123; trie *p = root; int len = strlen(s); for(int i = 0; i &lt; len; i++) &#123; int id = s[i] - 'a'; if(p-&gt;nxt[id] != NULL) &#123; p -&gt; nxt[id] -&gt; len = p -&gt; len + 1; p = p-&gt;nxt[id]; &#125; else &#123; p -&gt; nxt[id] = new trie; p -&gt; nxt[id] -&gt; len = p -&gt; len + 1; p = p -&gt; nxt[id]; &#125; &#125;&#125;void getFail()&#123; queue&lt;trie*&gt; q; q.push(root); trie *temp,*p; while(!q.empty()) &#123; p = q.front(); q.pop(); for(int i = 0; i &lt; 26; ++i) &#123; if(p -&gt; nxt[i]) &#123; if(p == root) p -&gt; nxt[i] -&gt; fail = root; else &#123; temp = p -&gt; fail; while(temp) &#123; if(temp -&gt; nxt[i]) &#123; p -&gt; nxt[i] -&gt; fail = temp -&gt; nxt[i]; break; &#125; temp = temp -&gt; fail; &#125; if(!temp) p -&gt; nxt[i] -&gt; fail = root; &#125; q.push(p -&gt; nxt[i]); &#125; &#125; &#125;&#125;void queryx(char* s)&#123; int i = 0; trie *p = root; trie *temp; while(s[i]) &#123; int id = s[i] - 'a'; while(!p -&gt; nxt[id] &amp;&amp; p != root) p = p -&gt; fail; p = p -&gt; nxt[id]; if(p == NULL) p = root; temp = p; while(temp != root) &#123; temp -&gt; flag = 1; temp = temp -&gt; fail; &#125; i++; &#125; return;&#125;int queryy(char* s)&#123; int i = 0,mxlen = 0; trie *p = root; trie *temp; while(s[i]) &#123; int id = s[i] - 'a'; while(!p -&gt; nxt[id] &amp;&amp; p != root) p = p -&gt; fail; p = p -&gt; nxt[id]; if(p == NULL) p = root; temp = p; while(temp != root) &#123; if(temp -&gt; flag == 1) mxlen = max(mxlen,temp-&gt;len); temp = temp -&gt; fail; &#125; i++; &#125; return mxlen;&#125;void Free(trie *p)&#123; for(int i = 0; i &lt; 26; ++i) &#123; if(p -&gt; nxt[i] != NULL) Free(p-&gt;nxt[i]); &#125; delete(p); p = NULL;&#125;void reset(trie *p)&#123; for(int i = 0; i &lt; 26; ++i) &#123; if(p -&gt; nxt[i] != NULL) reset(p-&gt;nxt[i]); &#125; p -&gt; flag = 0;&#125;int main()&#123; scanf("%d",&amp;T); while(T--)&#123; root = new trie; scanf("%d",&amp;n); int d = 0; getchar(); for(int i = 1; i &lt;= n; ++i)&#123; gets(S+d); Insert(S+d); pos[i] = d; d += strlen(S+d) + 1; &#125; getFail(); scanf("%d",&amp;m); while(m--)&#123; reset(root); scanf("%d%d",&amp;x,&amp;y); queryx(S+pos[x]); printf("%d\n",queryy(S+pos[y])); &#125; Free(root); &#125;&#125; G Galaxy at War没看 H Hybrid Crystals题意：给出数组a1,a2,a3….an，同时给出字符数组b1,b2,b3….bn,如果bi是N，那么ai可正可负，如果bi是L，那么ai是正的，如果bi是D，那么ai是负的，给出一个整数k，询问能否从ai中取出若干个使它们的和为k。此外还有一个奇怪的不等式$ai≤∑j=1i−1aj[bj=N]+∑j=1i−1aj[bi=L∩bj=L]+∑j=1i−1aj[bi=D∩bj=D]( 2 ≤ i ≤ n ).$解题：这个不等式保证了相邻的ai至多只会差1，初始状态下只有a1可以构成[-1,1]间所有的整数，此时如果来了一个正数1，那么能构成的值变成了[0,1]，如果来了一个负数1，那么能构成[-2,0]，若是正负1,那么能构成[-2,2]，区间的扩展是连续的，例如对于a1，只有出现一个3才会打断区间的连续性变成[2,4]，也就是只有当ai+1=ai+2时才会打断连续性，而不等式保证了不会出现这种情况。换句话说，每一个数都只会连续地扩大能够得到的和的范围，因此只要统计出最大负值和最大正值再判断k是否在这个区间呢就可以了。AC代码： 123456789101112131415161718192021222324252627282930313233#include &lt;bits/stdc++.h&gt;const int maxn = 1e3+200;using namespace std;int T,n,k,a[maxn],psum,nsum;char in;int main()&#123; ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); cin &gt;&gt; T; while(T--)&#123; psum = 0;nsum = 0; cin &gt;&gt; n &gt;&gt; k; for(int i = 0; i &lt; n; ++i)&#123; cin &gt;&gt; a[i]; &#125; for(int i = 0; i &lt; n; ++i)&#123; cin &gt;&gt; in; if(in == 'L') psum+=a[i]; else if(in == 'D') nsum+=a[i]; else&#123;psum+=a[i];nsum+=a[i];&#125; &#125; if(k &gt; 0)&#123; if(k &lt;= psum) puts("yes"); else puts("no"); &#125; else&#123; if(-k &lt;= nsum) puts("yes"); else puts("no"); &#125; &#125; return 0;&#125; I I am your Father!没看。 J Jedi Council没看。 K Killer Names题意：给出两个整数n和m，要求在大小为m的字符集中选出若干个字符，组成两段长度为n的字符串，要求两串字符串中不能有相同的字符（如在第一个字符串中出现了’a’，那么第二个字符串中就不能再出现’a’，但同一个字符串内可以有重复的字符）。题解：排列组合题，学到了新的东西——第二类斯特林数，第二类斯特林数是将m个格子分成n个集合有多少种不同的分法，我准备单独写一篇排列组合的文章了。。AC代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364#include &lt;bits/stdc++.h&gt;typedef long long ll;const ll mod = 1e9+7;using namespace std;ll T,n,m,fac[3000],c[3000][3000],s[3000][3000];ll qpow(ll a,ll b)&#123; ll res=1; while(b)&#123; if(b&amp;1) res = res * a % mod; b &gt;&gt;= 1; a = a * a % mod; &#125; return res;&#125;void init()&#123; //阶乘 fac[0]=fac[1]=1; for(int i = 2; i &lt;= 2000; ++i) fac[i] = fac[i-1] * i % mod; //组合数（杨辉三角） for(int i=0;i&lt;=2000;i++) &#123; for(int j=0;j&lt;=i;j++) &#123; if(j==0 || j==i) c[i][j]=1; else c[i][j] = (c[i-1][j-1]+c[i-1][j])%mod; &#125; &#125; //斯特林数 for(int i=0;i&lt;=2000;i++) s[i][i]=1,s[i][0]=0; for(int i=1;i&lt;=2000;i++) &#123; for(int j=1;j&lt;=i-1;j++) &#123; s[i][j]=(j*s[i-1][j]+s[i-1][j-1])%mod; &#125; &#125;&#125;int main()&#123; ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); init(); cin &gt;&gt; T; while(T--)&#123; cin &gt;&gt; n &gt;&gt; m; ll ans=0; for(ll i = 1; i &lt;= m - 1; ++i)&#123; ll tmp = c[m][i] * s[n][i] % mod * fac[i] % mod; for(ll j = 1; j &lt;= m - i; ++j)&#123; ans = ans + tmp * c[m-i][j] % mod * s[n][j] % mod * fac[j] % mod; ans %= mod; &#125; &#125; cout &lt;&lt; ans &lt;&lt; endl; &#125; return 0;&#125; 后记题面实在太长了，连补的欲望都没有了。。]]></content>
      <categories>
        <category>ACM自闭日记</category>
      </categories>
      <tags>
        <tag>AC自动机</tag>
        <tag>排列组合</tag>
        <tag>思维</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线段树的区间修改]]></title>
    <url>%2F2019%2F07%2F04%2FSegmentChange%2F</url>
    <content type="text"><![CDATA[又是线段树相关的内容！这次的文章会介绍线段树的区间修改（包括加减和改值） 在开始区间修改的介绍前，如果你对线段树没有任何了解，请移步线段树基础。 懒惰标记区间修改用到了一个很巧妙的思想——懒惰标记。在某个节点上的懒惰标记，就是它的子节点需要做出的变化，为节点加上懒惰标记后，不需要急于将标记下传，当以后的查询过程或修改过程遍历到它是再进行下传。于是线段树的结构体中又多了一个lazy变量，当然也可以用lazy数组实现。本文代码为求和线段树 下传函数将懒惰标记下传的函数，在修改、查询等过程中用到，记得下传后消除自己的懒惰标记。比较简单，自己理解。 1234567891011121314151617181920void pushdown(int l,int r,int rt)&#123; //区间改值 if(lazy[rt])&#123; int m = (l+r) &gt;&gt; 1; lazy[rt&lt;&lt;1] = lazy[rt]; lazy[rt&lt;&lt;1|1] = lazy[rt]; Sum[rt&lt;&lt;1] = lazy[rt] * (m-l+1); Sum[rt&lt;&lt;1|1] = lazy[rt] * (r-m); lazy[rt] = 0; &#125; //区间增减 /*if(lazy[rt])&#123; int m = (l+r) &gt;&gt; 1; lazy[rt&lt;&lt;1] += lazy[rt]; lazy[rt&lt;&lt;1|1] += lazy[rt]; Sum[rt&lt;&lt;1] += lazy[rt] * (m-l+1); Sum[rt&lt;&lt;1|1] += lazy[rt] * (r-m); lazy[rt] = 0; &#125;*/&#125; 区间修改区间修改包含了改值和加减，它的过程与区间查询的过程类似，当要修改的区间完全包含某一节点，直接给该节点打上lazy标记，否则继续拆分。 123456789101112131415161718void segupdate(int L,int R,int l,int r,int rt,int lzy)&#123; if(L &lt;= l &amp;&amp; R &gt;= r)&#123; //区间改值 lazy[rt]=lzy; Sum[rt] = (r-l+1) * lzy; //区间加减 /*lazy[rt]+=lzy; sum[rt]+=(r-l+1) * lzy;*/ return; &#125; ll m = (l+r) &gt;&gt; 1; pushdown(l,r,rt); if(L &lt;= m) segupdate(L,R,l,m,rt&lt;&lt;1,lzy); if(R &gt; m) segupdate(L,R,m+1,r,rt&lt;&lt;1|1,lzy); pushup(rt); return;&#125; 完整模版线段树区间修改新增的东西到此结束，但是由于懒惰标记和下传函数的加入，单点修改和查询函数也要做出相应的修改（添加下传函数）。下面给出完整的模版（数组实现求和线段树），不含主函数。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889#include &lt;bits/stdc++.h&gt;#define FAST ios::sync_with_stdio(0);cin.tie(0);cout.tie(0)typedef long long ll;const int maxn = 2e5+300;const int inf = 0x3f3f3f3f;using namespace std;int a[maxn],Sum[maxn&lt;&lt;2],lazy[maxn];//更新当前节点void pushup(int rt)&#123; Sum[rt] = Sum[rt&lt;&lt;1] + Sum[rt&lt;&lt;1|1];&#125;//下传函数void pushdown(int l,int r,int rt)&#123; //区间改值 if(lazy[rt])&#123; int m = (l+r) &gt;&gt; 1; lazy[rt&lt;&lt;1] = lazy[rt]; lazy[rt&lt;&lt;1|1] = lazy[rt]; Sum[rt&lt;&lt;1] = lazy[rt] * (m-l+1); Sum[rt&lt;&lt;1|1] = lazy[rt] * (r-m); lazy[rt] = 0; &#125; //区间增减 /*if(lazy[rt])&#123; int m = (l+r) &gt;&gt; 1; lazy[rt&lt;&lt;1] += lazy[rt]; lazy[rt&lt;&lt;1|1] += lazy[rt]; Sum[rt&lt;&lt;1] += lazy[rt] * (m-l+1); Sum[rt&lt;&lt;1|1] += lazy[rt] * (r-m); lazy[rt] = 0; &#125;*/&#125;//l:当前节点的左端点 r：当前节点的右端点 rt:当前节点的编号void build(int l,int r,int rt)&#123; if(l == r)&#123; Sum[rt] = a[l]; return; &#125; int m = (l+r) &gt;&gt; 1; build(l,m,rt&lt;&lt;1); build(m+1,r,rt&lt;&lt;1|1); pushup(rt);&#125;//l:当前节点的左端点 r：当前节点的右端点 rt:当前节点的编号 [L,R]查询的区间int query(int L,int R,int l,int r,int rt)&#123; if(L &lt;= l &amp;&amp; R &gt;= r) return Sum[rt]; int m = (l+r) &gt;&gt; 1; int res = 0; pushdown(l,r,rt); if(L &lt;= m) res += query(L,R,l,m,rt&lt;&lt;1); if(R &gt; m) res += query(L,R,m+1,r,rt&lt;&lt;1|1); return res;&#125;//l:当前节点的左端点 r：当前节点的右端点 rt:当前节点的编号 将L的值改为Vvoid update(int L,int V,int l,int r,int rt)&#123; if(l==r)&#123;Sum[rt]=V;return;&#125; int m = (l+r) &gt;&gt; 1; pushdown(l,r,rt); if(L &lt;= m) update(L,V,l,m,rt&lt;&lt;1); else update(L,V,m+1,r,rt&lt;&lt;1|1); pushup(rt);&#125;void segupdate(int L,int R,int l,int r,int rt,int lzy)&#123; if(L &lt;= l &amp;&amp; R &gt;= r)&#123; //区间改值 lazy[rt]=lzy; Sum[rt] = (r-l+1) * lzy; //区间加减 /*lazy[rt]+=lzy; sum[rt]+=(r-l+1) * lzy;*/ return; &#125; int m = (l+r) &gt;&gt; 1; pushdown(l,r,rt); if(L &lt;= m) segupdate(L,R,l,m,rt&lt;&lt;1,lzy); if(R &gt; m) segupdate(L,R,m+1,r,rt&lt;&lt;1|1,lzy); pushup(rt); return;&#125;]]></content>
      <categories>
        <category>ACM算法基础</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
        <tag>线段树</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HDU6096-String（AC自动机）]]></title>
    <url>%2F2019%2F07%2F04%2FHDU6096%2F</url>
    <content type="text"><![CDATA[题目地址：HDU6096Problem DescriptionBob has a dictionary with N words in it.Now there is a list of words in which the middle part of the word has continuous letters disappeared. The middle part does not include the first and last character.We only know the prefix and suffix of each word, and the number of characters missing is uncertain, it could be 0. But the prefix and suffix of each word can not overlap.For each word in the list, Bob wants to determine which word is in the dictionary by prefix and suffix.There are probably many answers. You just have to figure out how many words may be the answer. InputThe first line of the input gives the number of test cases T; T test cases follow.Each test case contains two integer N and Q, The number of words in the dictionary, and the number of words in the list.Next N line, each line has a string Wi, represents the ith word in the dictionary (0&lt;|Wi|≤100000)Next Q line, each line has two string Pi , Si, represents the prefix and suffix of the ith word in the list (0&lt;|Pi|,|Si|≤100000,0&lt;|Pi|+|Si|≤100000)All of the above characters are lowercase letters.The dictionary does not contain the same words. LimitsT≤50&lt;N,Q≤100000∑Si+Pi≤500000∑Wi≤500000 OutputFor each test case, output Q lines, an integer per line, represents the answer to each word in the list. Sample Input14 4abacdeacdefacdefa acd efac ace f Sample Output2110 题意：给若干个字符串，进行若干次询问，每次询问给出一个前缀和后缀，问同时有这个前缀和后缀的字符串有几个，前缀与后缀不能重叠。解题：一道构造很巧妙的AC自动机题，首先存下给出的字符串，接着将给出的前缀(s1)和后缀(s2)以s2 + ‘{‘ + s1的形式插入字典树，构造AC自动机Fail指针，然后将每个字符串S转换成S + ‘{‘ + S的形式在AC自动机上跑，每经过一个结束节点就在这个节点的计数器上加一，不过要注意由于前缀和后缀不能重叠，因此s2+s1的长度不能超过S，最后按照询问的顺序输出结束节点的计数器即可。之所以用’{‘是因为它等于’a’+26容易建树，当然也可以用别的字符。以cd ef的查询为例，他被构造成了”ef{cd”插入了字典树，那么当用cdef{cdef跑AC自动机时就会找到这个子串。如果不用’{‘分割，那么ab cd就会匹配到aabcde，显然是不对的。最后是AC代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129#include &lt;bits/stdc++.h&gt;const int maxn = 1e5 + 200;const int inf = 0x3f3f3f3f;using namespace std;struct trie&#123; trie *nxt[27]; trie *fail; int len; int cnt; trie() &#123; len = 0; cnt = 0; fail = NULL; memset(nxt,NULL,sizeof(nxt)); &#125;&#125;;trie *root,*tr[maxn];int T,N,Q,tot;string S[maxn],s1,s2;void Insert(string s)&#123; trie *p = root; for(int i = 0; i &lt; s.length(); i++) &#123; int id = s[i]-'a'; if(p-&gt;nxt[id] != NULL) &#123; p = p-&gt;nxt[id]; &#125; else &#123; p -&gt; nxt[id] = new trie; p = p -&gt; nxt[id]; &#125; &#125; tr[tot++] = p; p -&gt; len = s.length();&#125;void getFail()&#123; queue&lt;trie*&gt; q; q.push(root); trie *temp,*p; while(!q.empty()) &#123; p = q.front(); q.pop(); for(int i = 0; i &lt; 27; ++i) &#123; if(p -&gt; nxt[i]) &#123; if(p == root) p -&gt; nxt[i] -&gt; fail = root; else &#123; temp = p -&gt; fail; while(temp) &#123; if(temp -&gt; nxt[i]) &#123; p -&gt; nxt[i] -&gt; fail = temp -&gt; nxt[i]; break; &#125; temp = temp -&gt; fail; &#125; if(!temp) p -&gt; nxt[i] -&gt; fail = root; &#125; q.push(p -&gt; nxt[i]); &#125; &#125; &#125;&#125;void query(string s)&#123; trie *p = root; trie *temp; for(int i = 0; i &lt; s.length(); ++i)&#123; int id = s[i]-'a'; while(!p -&gt; nxt[id] &amp;&amp; p != root) p = p -&gt; fail; p = p -&gt; nxt[id]; if(p == NULL) p = root; temp = p; while(temp != root) &#123; if(temp-&gt;len &lt;= (s.length()-1)/2+1) temp-&gt;cnt++; temp = temp -&gt; fail; &#125; &#125;&#125;void Free(trie *p)&#123; for(int i = 0; i &lt; 27; ++i) &#123; if(p -&gt; nxt[i] != NULL) Free(p-&gt;nxt[i]); &#125; delete(p); p = NULL;&#125;int main()&#123; ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); cin &gt;&gt; T; while(T--)&#123; tot = 0; root = new trie; cin &gt;&gt; N &gt;&gt; Q; for(int i = 0; i &lt; N; ++i)&#123; cin &gt;&gt; S[i]; S[i] = S[i] + '&#123;' + S[i]; &#125; while(Q--)&#123; cin &gt;&gt; s1 &gt;&gt; s2; Insert(s2+'&#123;'+s1); &#125; getFail(); for(int i = 0;i &lt; N; ++i) query(S[i]); for(int i = 0;i &lt; tot;i++) cout &lt;&lt; tr[i]-&gt;cnt&lt;&lt; endl; Free(root); &#125; return 0;&#125;]]></content>
      <categories>
        <category>ACM解题报告</category>
      </categories>
      <tags>
        <tag>AC自动机</tag>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[并查集]]></title>
    <url>%2F2019%2F07%2F03%2FUnionFind%2F</url>
    <content type="text"><![CDATA[并查集并查集是一种数据结构，用于快速合并多个集合以及查询两个节点是否在同一个集合中。 引言思考一个简单的问题：有若干个点，每一次将其中两点连起来，若干次操作后，询问任意两点是否被联通。这样的问题要怎么解决呢？废话，当然就是要依靠本文下面将介绍的并查集的算法啦！ 思考问题对于这样的问题，显然我们可以直接将两点相连，但如果这么做，询问时就会遇到麻烦。DFS?BFS?当点的数目非常多时，这么做的复杂度似乎太高了。 并查集的作用顾名思义，并查集主要有两个作用，“并”和“查”。“并”，就是将两个集合合并到一起；“查”就是是查询两点是否在同一集合中。它的主要作用就是用来解决形如引言中那样的问题。并查集采用的是一种类树形结构，那么为什么要采用类树形结构呢？因为无论是合并还是查询，树形结构都很方便，也很快。大家知道，一棵k叉树的查询复杂度是O(logk(n))，除非k等于一，否则查询的速度是非常可观的。同时，要合并两棵树也非常容易——只要将两棵树的根直接相连就可以了。 并查集的结构体实现并查集既可以用结构体实现，也可以用数组实现，这里首先给出结构体的实现和讲解，文末给出数组实现，留给读者自己思抄考写。 节点的定义首先是并查集节点的定义，之所以说并查集是一种类树形结构，是因为它与树形结构有所不同，它的节点指针方向是与树相反的。树形结构的指针方向，由父节点指向子节点，而并查集节点的指针方向则由子节点指向父节点。（可以把并查集的这种数据结构看做一棵倒着的树）。所以，并查集的结构体非常简单，只需要一个指向父节点的指针以及原始数据即可。 123456struct node&#123; //数据 int id; //父节点 node *father = NULL;&#125; 路径压缩在开始具体代码的实现前，我们来理一理逻辑。要怎么合并两棵树？连接两棵树的根节点即可。要怎么连接两棵树的根节点呢？很简单，让某一个根节点的父亲指针指向另一个就行了，不过在这之前我们必须要先找到他们的根节点。因此下面会首先给出寻找根节点的代码实现，那么路径压缩又是什么呢？我们知道，一棵树的深度越浅，我们寻找根节点的效率也就越高，最优的情况下是怎样的呢？所有的节点都紧紧围绕着根节点就像全中国人民紧密团结在习主席周围。要单独进行这样的优化比较浪费时间，因此我们可以在寻根的过程中一并递归处理，当然这样并不能保证所有节点直接连接根节点，但已经足够紧密了。 并查集的寻根知道路径压缩以后，我们可以开始寻找根节点了。寻根过程很简单，一路沿着某一节点搜索父节点指针，直到没有父节点或者父节点是其自身（这两种情况是等价的，与代码实现有关）就可以了。那么路径压缩呢？只要将寻根过程碰到的所有节点的父指针直接指向根节点就可以了，这个操作可以用递归的方式简单实现。代码如下： 1234node* FindRoot(node *a)&#123; if(a-&gt;father == NULL) return a; else return a-&gt;father = FindRoot(a-&gt;father);&#125; 并查集的合并合并过程在之前就已经说过了，对于两个节点，如果根节点不同，将一个的根节点的父亲指针指向另一个根节点，如果相同，那么不需要进行合并操作。因为已经有了寻根的函数，合并的实现就变得非常简单，代码如下： 12345void Union(node *from,node *to)&#123; node *f1 = FindRoot(from),*f2 = FindRoot(to); if(f1 == f2) return; f2-&gt;father=f1;&#125; 例题及数组实现解释完并查集的结构体实现，那么又到了喜闻乐见的模版和例题环节了，模版中用数组实现了并查集。例题：HDU1232题意：给出若干个点和若干条边，询问要将整张图联通起来，至少还需要几条边。解题思路：这是一道模版题，时间很充裕，用并查集可以简单得出结果。步骤如下1.对于给出的每一条边，对边的两个端点进行“并”的操作。2.完成第1步后，整张图被分为了多个互相之间不连通的集合，要让整张图连通，需要的边数就是集合数减一。 12345678910111213141516171819202122232425262728293031323334353637383940414243#include &lt;bits/stdc++.h&gt;const int maxn = 1500;using namespace std;int N,M,father[maxn],a,b,vis[maxn],cnt;int Find(int a)&#123; if(father[a]==a) return a; return father[a]=Find(father[a]);&#125;void Union(int a,int b)&#123; int f1=Find(a),f2=Find(b); father[f2] = f1;&#125;void init()&#123; for(int i = 1; i &lt;= N; ++i) father[i]=i; memset(vis,0,sizeof(vis)); cnt=0;&#125;int main()&#123; //用于加速输入输出，忽视就行了 ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); while(cin &gt;&gt; N)&#123; if(N==0)break; cin &gt;&gt; M; init(); while(M--)&#123; cin &gt;&gt; a &gt;&gt; b; Union(a,b); &#125; for(int i = 1; i &lt;= N; ++i)&#123; int tmp = Find(i); if(!vis[tmp])&#123; cnt++; vis[tmp]=1; &#125; &#125; cout &lt;&lt; cnt - 1 &lt;&lt; endl; &#125; return 0;&#125; 后记并查集的介绍到此结束，这是一种比较简单的数据结构，在Kruscal算法中会用到并查集的算法。]]></content>
      <categories>
        <category>ACM算法基础</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
        <tag>并查集</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[置顶]]></title>
    <url>%2F2019%2F07%2F03%2Ftop%2F</url>
    <content type="text"><![CDATA[大佬队友的博客 SHU-SSYZE 模版地址：模版我又来更新这个没人看的博客了，加入ACM暑期菜鸡集训和神经网络（没有）相关的东西。 本博客已有的算法讲解和模版：1、AC自动机2、字典树3、线段树4、最短路5、最小生成树即将加入的算法讲解和模版：1、tarjan2、匈牙利算法3、km算法4、kmp算法]]></content>
  </entry>
  <entry>
    <title><![CDATA[线段树基础]]></title>
    <url>%2F2019%2F07%2F02%2FSegmentTree%2F</url>
    <content type="text"><![CDATA[线段树线段树是一种树形数据结构，用于快速统计和修改区间上的统计量。 线段树能做什么？线段树是一种完全二叉树，建树的时间复杂度为O(nlogn)，查询以及修改的复杂度都是O(logn)，可以高效的查询和修改区间统计量。 线段树的组成线段树的每一个节点上隐式地存储着这个节点所“掌管”的区间，显式地存储着节点所“掌管”区间上的某一或某些统计量。需要注意的是，这些统计量必须满足区间加法（如区间最大值是子区间最大值中的最大值，区间和为子区间和的和等），众数、最长上升子序列等不符合区间加法。如果要用结构体实现，它的节点定义将会是这样的: 1234struct node&#123; node *ls,*rs; //ls为节点左子节点的指针，rs为右子节点的指针 int sum,mx; //统计量，常用的是区间和以及区间最值&#125; 显然，如果给定一个数组a1,a2…an,以[1,n]为范围建立线段树，那么根节点所掌管的区间（这里的区间是指数组下标，而不是数字范围）就是[1,n]，而其左子节点掌管的区间是[1,n/2],右子节点掌管的区间是[n/2+1,n]。以此类推可以知道每一个节点所掌管的区间，这也就是为什么我说每一个节点上隐式地存储着这个节点所“掌管”的区间的原因。以区间[1,10]为例，一棵建好的线段树每一个节点所掌管的区间情况如下图所示： 线段树的结构体实现线段树可以用结构体和指针来实现，也可以用数组来实现，结构体的实现较为容易理解，因此本文将先用结构体来实现线段树，在本文最后会给出数组的实现方法。 区间加法用一个节点两个子节点的统计量来更新自己的统计量。具体见代码： 1234void pushup(node *rt)&#123; rt-&gt;mx = max(rt-&gt;ls-&gt;mx,rt-&gt;rs-&gt;mx); rt-&gt;sum = rt-&gt;ls-&gt;sum + rt-&gt;rs-&gt;sum;&#125; 这个函数在构造和修改值的过程中都会用到。 线段树的构造线段树的构造是一个递归建树的过程，这里直接贴上代码，边读代码边解释。 1234567891011121314//首先解释一下这5个参数//[L,R]是建立线段树所依赖的数组范围，在递归过程中不变//rt是当前递归到的指针，[l,r]是当前指针所掌管的区间，这3个变量将作为状态在递归过程中传递void build(int L,int R,int l,int r,node *rt)&#123; //如果当前指针掌管的范围只有一个元素，直接赋值并返回 if(l == r)&#123;rt -&gt; sum = a[l];rt -&gt; mx = a[r];return;&#125; //找到区间的中点 int m = (l+r) &lt;&lt; 1; //递归构造左子树和右子树 build(L,R,l,m,rt-&gt;ls); build(L,R,m+1,r,rt-&gt;rs); pushup(rt); return;&#125; 在主函数中呼叫构造函数时的初始状态通常为build(1,N,1,N,root)。 线段树的修改线段树的修改步骤大致分为两步：1.从根节点开始查找我要修改的值所在的叶节点。（没有子节点的节点称为叶节点）2.修改叶节点，沿着查找路径递归更新与该叶节点相连的所有节点。代码如下： 123456789101112131415//再来解释一下这5个参数//P是我要修改的值所在的位置，V是我要将其修改为的值//l,r,rt的含义与build中相同void update(int P,int V,int l,int r,node *rt)&#123; //找到了目标叶节点，更新叶节点的值，显然此时l=r=P if(l==r)&#123;rt-&gt;sum=V;rt-&gt;mx=V;return&#125;; //同样找出区间中点 int m = (l+r) &lt;&lt; 1; //如果目标叶节点在区间左半，向左子树找，否则向右子树找 if(P&lt;=m) update(P,V,l,m,rt-&gt;ls); else update(P,V,m+1,r,rt-&gt;rs); //递归更新与被修改的叶节点相连的所有节点 pushup(rt); return;&#125; 在主函数中呼叫时的方式是update(P,V,1,N,root)其中P、V的含义见代码注释。 线段树的查询到了最重要的查询步骤了，查询最值与查询区间和的方法大同小异。从根节点开始向下搜索，如果要查询的区间完全包含（可以相等）某一节点所掌管的区间，将这个区间的统计量加入到最终结果中；如果要查询的区间不能完全包含某一节点所掌管的区间，继续拆分这个区间直到要查询的区间能够完全包含它。具体见代码实现： 1234567891011121314151617//查询最值//[L,R]是要查询的区间//l,r,rt的含义与之前相同int querymx(int L,int R,int l,int r,node *rt)&#123; //如果查询区间完全包含当前节点所掌管的区间，返回最大值 if(L &lt;= l &amp;&amp; R &gt;= r) return rt-&gt;mx; //初始化最大值为负无穷 int res = -inf; //求出线段中点 int m = (l+r) &lt;&lt; 1; //L&lt;=m说明要查询的区间可以继续往左子树拆分 if(L &lt;= m) res = max(res,querymx(L,R,l,m,rt-&gt;ls)); //R&gt;=m+1说明要查询的区间可以继续往右子树拆分 if(R &gt;= m+1) res = max(res,querymx(L,R,m+1,r,rt-&gt;rs)); //最终得出结果 return res;&#125; 注意在上述代码中L&lt;=m和R&gt;=m+1并不是if和else的关系，一个线段可以同时既可以往左拆分也可以往右拆分（例如要查询的区间是[4,6]而当前节点掌管的区间是[1,10]），但2种情况至少成立1种（否则L就会大于R），因此-inf并不会被计算到最终结果中去。查询区间和的方法类似，只要进行简单修改就可以了： 12345678int querysum(int L,int R,int l,int r,node *rt)&#123; if(L &lt;= l &amp;&amp; R &gt;= r) return rt-&gt;sum; int res = 0; int m = (l+r) &lt;&lt; 1; if(L &lt;= m) res += querysum(L,R,l,m,rt-&gt;ls); if(R &gt;= m+1) res += querysum(L,R,m+1,r,rt-&gt;rs); return res;&#125; 其实只是改变了统计量的“区间加法”部分的代码，注意此时res只能被初始化为0。 线段树的数组实现说明完线段树的结构体实现，接下来就是线段树的数组实现了，大部分代码与结构体实现类似，只是把节点抽象到了统计量数组的下标上，此时对于任意一个节点$rt$，它的左子节点是$rt * 2$,它的右子节点是$rt * 2+1$,个人习惯用rt&lt;&lt;1表示$rt * 2$,用rt&lt;&lt;1|1表示$rt * 2+1$。数组实现线段树的方法代码较为简洁，但理解起来稍有些抽象。这里是一道例题：HDU1754以下给出完整的AC代码（数组实现线段树的模版）： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657#include &lt;cstdio&gt;#include &lt;algorithm&gt;using namespace std;const int maxn = 200000 + 5;const int inf = 0x3f3f3f3f;int N,M,mark[maxn],Max[maxn&lt;&lt;2]; //数组要开到区间长度的4倍确保空间够用//更新当前节点void pushup(int rt)&#123; Max[rt] = max(Max[rt&lt;&lt;1],Max[rt&lt;&lt;1|1]);&#125;//l:当前节点的左端点 r：当前节点的右端点 rt:当前节点的编号void build(int l,int r,int rt)&#123; if(l == r)&#123;Max[rt] = mark[l];return;&#125; int m = (l+r) &gt;&gt; 1; build(l,m,rt&lt;&lt;1); build(m+1,r,rt&lt;&lt;1|1); pushup(rt);&#125;//l:当前节点的左端点 r：当前节点的右端点 rt:当前节点的编号 [L,R]查询的区间int query(int L,int R,int l,int r,int rt)&#123; if(L &lt;= l &amp;&amp; R &gt;= r) return Max[rt]; int m = (l+r) &gt;&gt; 1; int res = 0; if(L &lt;= m) res = max(res,query(L,R,l,m,rt&lt;&lt;1)); if(R &gt; m) res = max(res,query(L,R,m+1,r,rt&lt;&lt;1|1)); return res;&#125;//l:当前节点的左端点 r：当前节点的右端点 rt:当前节点的编号 将L的值改为Vvoid update(int L,int V,int l,int r,int rt)&#123; if(l==r)&#123;Max[rt]=V;return;&#125;; int m = (l+r) &gt;&gt; 1; if(L &lt;= m) update(L,V,l,m,rt&lt;&lt;1); else update(L,V,m+1,r,rt&lt;&lt;1|1); pushup(rt);&#125;int main()&#123; while(scanf("%d%d",&amp;N,&amp;M) != EOF)&#123; for(int i = 1; i &lt;= N; ++i) scanf("%d",&amp;mark[i]); build(1,N,1); char c; int a,b; while(M--)&#123; scanf(" %c%d%d",&amp;c,&amp;a,&amp;b); if(c=='Q') printf("%d\n",query(a,b,1,N,1)); else update(a,b,1,N,1); &#125; &#125; return 0;&#125; 读者可以结合注释与前文结构体实现的代码进行对照理解。 后记又一个数据结构写完了，当然以后还会更新线段树的加强版：主席树、红黑树等，敬请期待咯~更新了区间修改的内容，欢迎阅读:线段树区间修改。]]></content>
      <categories>
        <category>ACM算法基础</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
        <tag>线段树</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[模版]]></title>
    <url>%2F2019%2F07%2F02%2FTemplate%2F</url>
    <content type="text"><![CDATA[密码是我的学号哟o(∩_∩)o Incorrect Password! No content to display! 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]]></content>
  </entry>
  <entry>
    <title><![CDATA[素数相关]]></title>
    <url>%2F2019%2F07%2F02%2Fprime%2F</url>
    <content type="text"><![CDATA[素数素数，就是因数只有1和自己的数，本文将介绍一些素数相关的内容。 素数筛一种快速找出一定范围内所有素数的方法。 埃拉托斯特尼筛法简称埃氏筛或埃筛，是一种十分好写也十分容易理解的素数筛法。原理十分简单，如果一个数是素数，那么他的任意倍数一定不是素数。因此我们首先假设所有数都是素数，接着从2开始找，2是素数，那么把它的所有倍数标记为非素数，从小到大开始筛，这样当我们找到一个数还没有被标记为非素数的话，它一定是一个素数，再次标记它的所有倍数为非素数，依此循环。下面给出代码： 1234567891011121314151617#include &lt;bits/stdc++.h&gt;typedef long long ll;const int maxn = 4e3;//只筛到maxn以内的质数using namespace std;int not_prime[maxn],prime[maxn];void getprime()&#123; int cnt = 0; for(int i = 2; i &lt;= maxn; ++i)&#123; if(!not_prime[i])&#123; prime[cnt++] = i; for(int j = i + i; j &lt;= maxn; j+=i) not_prime[j] = 1; &#125; &#125;&#125; 欧拉筛法又名快速素数筛或欧筛，一听名字就知道它很快。那么为什么欧拉筛法比埃氏筛快呢，或者说，埃氏筛法哪里慢了？观察埃氏筛法，我们发现，同一个合数，它有可能被多个素数筛到，比如6被2筛到之后又会被3筛到，这就造成了多余的运算。而欧拉筛避免了这一点，在欧拉筛中每一个合数都只会被筛到一次，实现了线性复杂度O(n)。 过程简述欧筛的过程简述如下：1.与埃筛一样，将所有数假设为素数。2.从2开始遍历，如果遇到一个素数，那么将这个素数加入素数表。3.无论遇到的是不是素数，都遍历素数表（为了方便表述，设这个数为N，当前遍历到的素数为P），将$N*P$标记为非素数，如果此时N能够被P整除，那么结束素数表的遍历，否则继续遍历素数表。 过程模拟为了方便理解，这里给出10以内的素数的遍历过程。（已经理解的跳过分割线内的内容） 初始状态：not_prime数组(not_prime数值为0说明是素数) 1 2 3 4 5 6 7 8 9 10 1 0 0 0 0 0 0 0 0 0 素数表为空遍历到2时，2是素数，将2加入素数表，遍历素数表，$22=4$标记为非素数，因为2能整除2，结束素数表的遍历。此时状态：*not_prime数组**(not_prime数值为0说明是素数) 1 2 3 4 5 6 7 8 9 10 1 0 0 1 0 0 0 0 0 0 素数表 2 接着遍历3，3是素数，将3加入素数表，遍历素数表会将6和9标记为非素数。此时状态：not_prime数组(not_prime数值为0说明是素数) 1 2 3 4 5 6 7 8 9 10 1 0 0 1 0 1 0 0 1 0 素数表 2 3 遍历4，4不是素数，不加入素数表，遍历素数表，会将8标记为素数（2能整除4，因此只遍历到2就结束素数表的遍历）此时状态：not_prime数组(not_prime数值为0说明是素数) 1 2 3 4 5 6 7 8 9 10 1 0 0 1 0 1 0 1 1 0 素数表 2 3 遍历5，5是素数，将5加入素数表，遍历素数表会把10，15，25标记为非素数。此时状态：not_prime数组(not_prime数值为0说明是素数) 1 2 3 4 5 6 7 8 9 10 1 0 0 1 0 1 0 1 1 1 素数表 2 3 5 实际上至此10以内的所有素数已经全部被筛出了，接着遍历6会将12标记为非素数，而遍历7会把14、21、35、49标记为非素数……在这个过程中，每一个合数都只会被筛到一次，证明略。 具体代码给出代码实现： 123456789101112131415161718192021#include &lt;bits/stdc++.h&gt;typedef long long ll;const int maxn = 1e6;using namespace std;int not_prime[maxn],prime[maxn];void getprime()&#123; not_prime[1] = 1; int tot = 0; for(int i = 2; i &lt;= maxn; ++i)&#123; if(!not_prime[i]) prime[tot++] = i; for(int j = 0; prime[j]*i &lt;= maxn; j++)&#123; int x = prime[j]*i; not_prime[x] = 1; if(i % prime[j] == 0) break; &#125; &#125;&#125; 相较于埃氏筛，欧拉筛法更快，且没有其他缺点，因此实际上只要记住欧拉筛就可以了埃氏筛比较好记就是了 分解素因数将一个大合数N分解成素因数的乘积，方法如下：1.用欧拉筛或埃氏筛得到素数表。2.从素数表中最小的素数P开始，如果N能够被P整除，那么将N /= P，并将P作为素因数的指数加一，重复这个步骤直到N不能被P整除。3.用下一个较大的素数重复第2步，直到取出大于$sqrt(N)$的第一个素数。4.如果N已经被除到了1，那么素因数分解完毕，如果N还没有被除到1，那么N最终的值是它自己的最后一个素因数。 用途较少，这里给出一道可用这种方法解答的例题：SHUOJ2只能用校内网连上，连不上就算了。。题意简述：给定正整数A,B（1&lt;=A,B&lt;=1000）,求$GCD(A,B^B)$。解题思路：由于B较大，显然不能直接求出$B^B$再求GCD，因此对A和B进行素因数分解，再将B的每一个素因数的指数乘以B，就能得出$B^B$的素因数，A和B的公共素因数的乘积就是所求的答案。AC代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#include &lt;bits/stdc++.h&gt;typedef long long ll;const int maxn = 1e3;using namespace std;int not_prime[maxn],prime[maxn],cnt[2][35],A,B;void getprime()&#123; not_prime[1] = 1; int tot = 0; for(int i = 2; i &lt;= maxn; ++i)&#123; if(!not_prime[i]) prime[tot++] = i; for(int j = 0; j&lt;tot &amp;&amp; prime[j]*i &lt;= maxn; j++)&#123; int x = prime[j]*i; not_prime[x] = 1; if(i % prime[j] == 0) break; &#125; &#125;&#125;//快速幂int qpow(int x,int y)&#123; int res = 1; while(y)&#123; if(y&amp;1) res = res * x; y &gt;&gt;= 1; x = x * x; &#125; return res;&#125;int main()&#123; getprime(); while(cin &gt;&gt; A &gt;&gt; B)&#123; memset(cnt,0,sizeof(cnt)); int t = B; for(int i = 0; i &lt;= 30; i++)&#123; while(A % prime[i] == 0)&#123;cnt[0][i]++;A /= prime[i];&#125; while(B % prime[i] == 0)&#123;cnt[1][i]++;B /= prime[i];&#125; cnt[1][i] *= t; &#125; int ans = 1; for(int i = 0; i &lt;= 30; i++)&#123; ans *= qpow(prime[i],min(cnt[0][i],cnt[1][i])); &#125; cout &lt;&lt; ans &lt;&lt; endl; &#125;&#125; 本题还有另一种做法,之后可能会补上。此外，有一件很奇怪的事就是当maxn取某些值的时候，prime[0]会莫名其妙变成1，暂时没有发现原因。。 后记素数相关的算法和思想还是比较重要的，HDU的多校赛经常出现GCD等相关问题。今天的训练赛打的真是自闭]]></content>
      <categories>
        <category>ACM算法基础</category>
      </categories>
      <tags>
        <tag>素数筛</tag>
        <tag>分解因数</tag>
        <tag>素数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ACM暑期训练赛（HDU07）]]></title>
    <url>%2F2019%2F07%2F02%2FHDU07%2F</url>
    <content type="text"><![CDATA[2019/07/02 阴有雨又是自闭的一天2019/07/03 晴？阴？更新了B、C、H的题解 比赛地址：HDU07 HDU07A All Kill（待补） B Build a Tree题意：给出一棵有N个节点的完全K叉树，求这棵树所有子树大小异或后的答案。解题：待补，考虑将子树分为完整的K叉树和不完整的K叉树，不完整的k叉树至多只有一棵，单独处理这棵树，从树的最底层向上递归求解。 C Color the chessboard题意：给出一张矩形图，图上每一个单位矩形初始状态下被涂为白色或红色或蓝色，现在要将这张图上的每一个白色的单位矩形染上色，要求所有具有偶数行数和偶数列数的矩形中所含有的蓝色矩形和红色矩形数量相等。解题：待补，显然只要所有的2*2的矩形都满足条件，那么就能满足条件，DFS or DP？ D Destroy the cube(待补) E Euler theorem题意：给出若干个整数，对于每一个整数，要求输出这个整数余除以任意一个数能得到的余数的个数。（如，对于3，3%3=0,3%4=3,3%2=1,任何数都不能让3余2，因此有3个余数）。解题：签到题打表就能得到答案。显然，对于一个数N，任何数不可能让它余超过$(N-1)/2$，而任意不超过N/2的余数都是有可能得到的，因此最终的答案就是$N/2+2$(1~N/2以及0和N)。简单证明：要让$N$余一个数$m$，只要让他余除$N-m$就可以了，但当$m&gt;(N-1)/2$时$2(N-m)&lt;N+1$,即$2(N-m)&lt;=N$,这时$N$余除$(N-m)$的值就变成了$N$余除$2(N-m)$的值，显然这是一个小于$(N-1)/2$的值。 F Free from square题意：给出两个整数n,K（小于500），要求从1 ~ K中挑出n个整数，这些整数的乘积不能被任何完全平方数（除了1）整除，输出可行的方案数。解题：待补，显然不能选相同的数字，且选了一个数以后不能再选任何它的倍数。然后不会了 G Give out candies（待补） H Hard challenge题意：在二维坐标平面上给出若干个点的坐标和权值，保证任意两点所连成的直线不经过原点，任意两点间的边的权值等于这两点权值的乘积，现在要求过原点画一条直线，这条直线所穿过的边的权值之和最大，输出最大的权值。解题：代码待补1.首先，任何一条过原点的直线所穿过的边的权值之和，等于直线一边所有点的权值之和乘以直线另一边所有点的权值之和。2.根据原点到每一个点连线的斜率，可以将所画直线的斜率分成若干个区间，枚举这些区间就能得出答案。3.为了得到区间，首先需要将点按照斜率的不同进行排序（极序排序），接着按照第0个点到第1个点间，第1个点到第2个点间……的顺序进行枚举。4.可以在0 ~ 360°的区间内维护一个前缀和快速得出某一直线两边的点的权值之和。 I Inverse of sum（待补） J Just do it题意：给出一个数列a0a1a2……an，要求进行一种运算m次，这种运算就是将每一个ai变成bi，切bi的值等于原数列ai从a0异或到ai的结果。解题：待补，找规律？我找了个规律然后T了(┬＿┬) K Kolakoski题意：有一种特殊的数列，它的第一项是1，这个数列形如：1，2，2，1，1，2，1，2，2……，将这个数列相同的项合并会变成1，22，11，2，1，22……，计算每一项的位数作为新数列这一项的值会变成1，2，2，1，1，2……，我们发现这个数列变回了最初的数列，现在要求输出这个数列的第n项（n&lt;1e7）。解题：n的数值较小，直接用vector暴力模拟即可。简述模拟过程：1.首先初始化数列的前3项为1，2，22.接着将指针指向第3项（2）。3.沿着指针，如果发现了一个2，那么需要在队尾添加两个相同的数，但这个数要与前一个数不同，因此如果此时队尾元素是1那么push_back两个2，如果队尾元素是2那么push_back两个1；如果发现了一个1，那么push_back一个与队尾元素不同的数即可。贴上AC的代码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#include &lt;bits/stdc++.h&gt;using namespace std;vector&lt;int&gt; s;int main()&#123; int t,temp; //模拟过程 s.push_back(1); s.push_back(2); s.push_back(2); for(int i=2;i&lt;1e7+5;i++) &#123; temp = s.size() - 1; if(s[i] == 1) &#123; if(s[temp] == 1) &#123; s.push_back(2); &#125; else &#123; s.push_back(1); &#125; &#125; else &#123; if(s[temp] == 2) &#123; s.push_back(1); s.push_back(1); &#125; else &#123; s.push_back(2); s.push_back(2); &#125; &#125; &#125; //模拟结束 cin&gt;&gt;t; while(t--) &#123; int n; cin&gt;&gt;n; cout&lt;&lt;s[n-1]&lt;&lt;endl; &#125;&#125; L Loop next（待补） M Mystery（待补） 看看明天能补几道吧。。(┬＿┬) 补题日记7/3H Hard challenge解题：大致解法与昨天写的差不多，不过实际写代码的时候有一些问题，因此做了一些改变，改变后的解题方法如下：1.将所有点按照斜率k从大到小的顺序排序。2.初始状态下让所画的直线竖置，这样将所有点分为直线左边的点与直线右边的点两组（特别注意在y轴上的点分在直线右边，此时可以认为直线并不完全竖置），输入时统计直线左边的点权和lsum和直线右边的点权和rsum。3.维护lsum和rsum。按k从大到小的顺序遍历每一个点，每一次改变直线将这个点的分组改变（由于已经按k排序，每次移动直线只会有一个点的分组被改变），根据这个点的位置对lsum和rsum做出相应的变化。4.昨天维护前缀和的问题在于0 ~ 360°并不是一个离散的范围而是一个连续的范围，前缀数组的维护有难度。貌似也是可以的，但我懒得想了以下是AC代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#include &lt;bits/stdc++.h&gt;typedef long long ll;const int maxn = 5e4+200;const int inf = 0x3f3f3f3f;using namespace std;struct points&#123; int x,y,val; double k;//斜率&#125;P[maxn];int n,T;ll lsum,rsum,ans;bool cmp(points a,points b)&#123; return a.k&gt;b.k;&#125;int main()&#123; ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); cin &gt;&gt; T; while(T--)&#123; cin &gt;&gt; n; lsum = 0;rsum = 0; for(int i = 0; i &lt; n; ++i)&#123; cin &gt;&gt; P[i].x &gt;&gt; P[i].y &gt;&gt; P[i].val; //计算出斜率 P[i].k = atan(1.0*P[i].y/P[i].x); //预设lsum和rsum状态 if(P[i].x &lt; 0) lsum += P[i].val; else rsum += P[i].val; &#125; //按斜率排序 sort(P,P+n,cmp); //预设ans状态 ans = lsum * rsum; //遍历，维护lsum、rsum和ans for(int i = 0; i &lt; n; ++i)&#123; if(P[i].x &gt; 0)&#123; lsum += P[i].val; rsum -= P[i].val; &#125; else&#123; lsum -= P[i].val; rsum += P[i].val; &#125; ans = max(ans,lsum*rsum); &#125; cout &lt;&lt; ans &lt;&lt; endl; &#125; return 0;&#125; B Build a tree我的数据结构是真的菜啊解题：显然，题目给出的是一个有n个节点的完全k叉树，观察这课树，不难发现，除了第一层和最后一层，每一层至多只有一棵子树不是满k叉树，而这棵子树左边的所有子树是满k叉树，右边是深度小一的满k叉树（画张图就很清楚了），因此按以下步骤求解：1.预处理，用一个数组记录每一层最后一个节点的编号，同时得到树的深度。2.首先单独处理最后一层，将可能不是满k叉树的那几个节点单独挑出，并标记最后一个节点，其余统一进行异或。3.向上遍历，每一层由三部分组成：①最深的满k叉树②不满的那棵k叉树③浅一层的k叉树。每次遍历一层将标记上传的父节点，这个节点就是那棵可能不满的k叉树，左边是较深的k叉树，右边是较浅的k叉树。很容易得到满k叉树的size和数目，因此统一异或。不满的k叉树的size等于这一层以下（包含这一层）的总节点数减去左边满k叉树的size之和再减去右边满k叉树的size之和。4.一直遍历到树的第一层，结束遍历。5.显然遍历的时间复杂度是$logk(n)$，只要k&gt;=2，是很快就能遍历完的，但当k=1是遍历会很慢，因此打表特判。下面给出AC代码，代码比较丑，将就一下吧： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475#include &lt;bits/stdc++.h&gt;typedef long long ll;using namespace std;int T;//num记录每一层最后一个节点的编号，pos是非满k叉树节点的编号//LSize是pos左边满k叉树的size，RSize同理//ex是单独处理的子树的异或结果,restSize是非满k叉树的sizell n,k,num[70],dep,pos,LSize,RSize,nowdep,ex,restSize;ll qpow(ll a,ll b)&#123; ll res = 1; while(b)&#123; if(b&amp;1) res *= a; b &gt;&gt;= 1; a*=a; &#125; return res;&#125;int main()&#123; ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); cin &gt;&gt; T; while(T--)&#123; cin &gt;&gt; n &gt;&gt; k; //特判k=1的情况 if(k == 1)&#123; ll tmp = n % 4; if(tmp == 0) cout &lt;&lt; n &lt;&lt; '\n'; if(tmp == 1) cout &lt;&lt; 1 &lt;&lt; '\n'; if(tmp == 2) cout &lt;&lt; n+1 &lt;&lt; '\n'; if(tmp == 3) cout &lt;&lt; 0 &lt;&lt; '\n'; continue; &#125; else&#123; ll i = 0,ans = n; num[0] = 0; //找出每一层最后一个节点的编号以及树的深度 while(num[i] &lt; n - 1 &amp;&amp; num[i] &lt;= n - 1 - qpow(k,i+1))&#123; num[i+1] = num[i] + qpow(k,i+1); i++; &#125; pos = n - 1; //可能组成非满2叉树的节点数 restSize = (pos-num[i])%k; ans ^= (((pos-num[i])-restSize) &amp; 1); ex = ((restSize&amp;1)?1:0); //深度是i+1，原因自己看上面的while条件，主要是怕他溢出ll。。 dep = i + 1; //最后一层已经处理完，开始处理倒数第二层 nowdep = i; LSize = 1; RSize = 0; //ans初始化为n，因此不用再算第一层，算到第2层就可以结束了 while(nowdep &gt; 0)&#123; //上传标记 pos = (pos-1)/k; //计算左满k叉树，右满k叉树以及非满k叉树的size LSize = LSize * k + 1; RSize = RSize * k + 1; restSize = (n - 1 - num[nowdep-1])- (pos-num[nowdep-1]-1)*LSize - (num[nowdep]-pos)*RSize; ex ^= restSize; ans ^= (((pos-num[nowdep-1]-1)&amp;1)?1:0)*LSize; ans ^= (((num[nowdep]-pos)&amp;1)?1:0)*RSize; nowdep--; &#125; //最终结果异或上单独处理的子树 ans ^= ex; cout &lt;&lt; ans &lt;&lt; endl; &#125; &#125; return 0;&#125; C Color the chessboard解题：昨天想的没错，只要2 * 2的矩形满足，整个图就能满足，将各种2 * 2的矩形排列一下，你或许会发现，将R看做1，B看做0，所有答案一定满足2种情况之一：1.不考虑列的情况，每一行一定是01循环或10循环之一。2.不考虑行的情况，每一列一定是01循环或10循环之一。其次，只要满足上述两种情况之一，那么一定是一种答案。因此分2次暴力跑出能否满足上述2种情况之一，将两种情况的可能数相加。有2种情况可能会被重复计算，也就是行和列同时满足01循环或10循环的情况，单独跑出能否满足这种情况，能满足则减一。具体可以结合这篇文章一起理解，我的代码也是几乎照抄了一遍这篇文章的。。以下是AC代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384#include &lt;bits/stdc++.h&gt;typedef long long ll;using namespace std;const ll mod = 998244353;int T,n,m;ll ans,ans1,ans2;int M[2000][2000];char C[2000][2000];bool flag;int main()&#123; ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); cin &gt;&gt; T; while(T--)&#123; cin &gt;&gt; n &gt;&gt; m; for(int i = 1; i &lt;= n; ++i) for(int j = 1; j &lt;= m; ++j)&#123; cin &gt;&gt; C[i][j]; if(C[i][j] == 'R') M[i][j] = 1; if(C[i][j] == 'B') M[i][j] = 0; if(C[i][j] == '?') M[i][j] = -1; &#125; ans1 = 1; for(int i = 1; i &lt;= n; ++i)&#123; //cnt是每一行选择的可能性，显然总的可能性要相乘得出 ll cnt = 0; flag = true; for(int j = 1; j &lt;= m; ++j)&#123; if(j%2==1 &amp;&amp; M[i][j] == 0)&#123;flag = false;break;&#125; if(j%2==0 &amp;&amp; M[i][j] == 1)&#123;flag = false;break;&#125; &#125; if(flag) cnt++; flag = true; for(int j = 1; j &lt;= m; ++j)&#123; if(j%2==1 &amp;&amp; M[i][j] == 1)&#123;flag = false;break;&#125; if(j%2==0 &amp;&amp; M[i][j] == 0)&#123;flag = false;break;&#125; &#125; if(flag) cnt++; ans1 = (ans1*cnt)%mod; if(ans1 == 0) break; &#125; ans2 = 1; for(int j = 1; j &lt;= m; ++j)&#123; ll cnt = 0; flag = true; for(int i = 1; i &lt;= n; ++i)&#123; if(i%2==1 &amp;&amp; M[i][j] == 0)&#123;flag = false;break;&#125; if(i%2==0 &amp;&amp; M[i][j] == 1)&#123;flag = false;break;&#125; &#125; if(flag) cnt++; flag = true; for(int i = 1; i &lt;= n; ++i)&#123; if(i%2==1 &amp;&amp; M[i][j] == 1)&#123;flag = false;break;&#125; if(i%2==0 &amp;&amp; M[i][j] == 0)&#123;flag = false;break;&#125; &#125; if(flag) cnt++; ans2 = (ans2*cnt)%mod; if(ans2 == 0) break; &#125; ans = (ans1+ans2)%mod; flag = true; for(int i = 1; i &lt;= n; ++i)&#123; for(int j = 1; j &lt;= m; ++j)&#123; if((i+j)%2==1 &amp;&amp; M[i][j] == 1)&#123;flag = false;break;&#125; if((i+j)%2==0 &amp;&amp; M[i][j] == 0)&#123;flag = false;break;&#125; &#125; if(!flag) break; &#125; if(flag) ans = (ans-1+mod)%mod; flag = true; for(int i = 1; i &lt;= n; ++i)&#123; for(int j = 1; j &lt;= m; ++j)&#123; if((i+j)%2==1 &amp;&amp; M[i][j] == 0)&#123;flag = false;break;&#125; if((i+j)%2==0 &amp;&amp; M[i][j] == 1)&#123;flag = false;break;&#125; &#125; if(!flag) break; &#125; if(flag) ans = (ans-1+mod)%mod; cout &lt;&lt; ans &lt;&lt; endl; &#125; return 0;&#125; 代码中的break都是用来剪枝的，剪枝以后变慢了，姑且是能懂了，不过总感觉有些不能释怀，比赛时真的能想通吗。。。 7/3补题小结今天暂时补到这了，感觉还是经验不够啊？？还是我太菜了这几题能看懂但总觉得比赛的时候想不到。]]></content>
      <categories>
        <category>ACM自闭日记</category>
      </categories>
      <tags>
        <tag>自闭</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[图论最小生成树]]></title>
    <url>%2F2019%2F07%2F02%2FminTree%2F</url>
    <content type="text"><![CDATA[最小生成树本文会介绍两种用于获取最小生成树的算法，同样只给出用法不给出证明。 引入最小生成树通常用于解决形如以下的这种问题：给定若干个点和若干个边，保证这些边能将这些点全联通，试从这些边中选出部分边，使生成的树的边权之和最小。当然ACM的题通常都会有一个场景，比如有许多城镇，现已知这些城镇间的距离，要在这些城镇间修路，保证联通所有城镇的同时使得所修的路最短。 最小生成树算法下文会介绍两种算法Prim和Kruscal算法,这两种算法都会采用贪心的策略。 PrimPrim是一种以点为主体的贪心算法。下面简述算法的过程：1.在所有点中任取一点作为树的根，更新其他所有点到树的距离。2.在未被选取的点中，找到离树最近的点并选入树中，再次更新其他所有点到树的距离。3.重复第2步，直到所有点都被选入树中，Prim算法到此结束。点到树的距离是指点到树上任意一点的最短距离注意给出的图有多个最小生成树，根据选取的起点不同可能的到不同的最小生成树，但如果最小生成树唯一，那么起点的选取不会影响最终得到的最小生成树，所以放心大胆地去选取起点吧！ 下面给出prim算法主体的代码： 123456789101112131415161718192021222324void prim()&#123; //初始化，将1号点加入到生成树中 ans = 0; int cnt = 1; vis[1] = 1; for(int i = 1;i &lt;= N;++i) mndis[i]=dis[1][i]; while(cnt != N)&#123; int mn = inf,id; //找出所有点中距离生成树最近的点 for(int i = 1; i &lt;= N; i++)&#123; if(!vis[i] &amp;&amp; mndis[i] &lt; mn)&#123; mn = mndis[i]; id = i; &#125; &#125; //将找到的点加入生成树 vis[id] = 1; ans += mn; cnt++; //更新剩余点到树的距离 for(int i = 1; i &lt;= N; i++) mndis[i] = min(mndis[i],dis[id][i]); &#125;&#125; 本算法中采用邻接矩阵以及暴力遍历找最小值的方式实现，理论上可以用优先队列和邻接表实现。 同样给出例题：hdu1233以下是AC代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#include &lt;bits/stdc++.h&gt;const int maxn = 200;const int inf = 0x3f3f3f3f;using namespace std;int N,dis[maxn][maxn],vis[maxn],ans,mndis[maxn];void prim()&#123; //初始化，将1号点加入到生成树中 ans = 0; int cnt = 1; vis[1] = 1; for(int i = 1;i &lt;= N;++i) mndis[i]=dis[1][i]; while(cnt != N)&#123; int mn = inf,id; //找出所有点中距离生成树最近的点 for(int i = 1; i &lt;= N; i++)&#123; if(!vis[i] &amp;&amp; mndis[i] &lt; mn)&#123; mn = mndis[i]; id = i; &#125; &#125; //将找到的点加入生成树 vis[id] = 1; ans += mn; cnt++; //更新剩余点到树的距离 for(int i = 1; i &lt;= N; i++) mndis[i] = min(mndis[i],dis[id][i]); &#125;&#125;int main()&#123; ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); while(cin &gt;&gt; N)&#123; if(!N) break; memset(dis,0,sizeof(dis)); memset(vis,0,sizeof(vis)); int T = N * (N - 1) / 2; while(T--)&#123; int a,b,c; cin &gt;&gt; a &gt;&gt; b &gt;&gt; c; dis[a][b] = dis[b][a] = c; &#125; prim(); cout &lt;&lt; ans &lt;&lt; endl; &#125; return 0;&#125; KruscalKruscal是一种以边为主体的贪心算法，下面简述算法过程。1.从所有没有使用过的边中找出最短的一条边，标记为使用过了。2.如果边的两个端点不在一棵树中，那么将这条边加入到树中，否则不加入。3.重复1、2步直到所有点被联通（显然联通n个点需要n-1条边）。 找最短边的过程可以用优先队列实现，而判断端点是否在同一棵树中，可以用并查集实现，如果不会并查集，可以先阅读这篇文章，下面代码中的Find和Union函数毁在这篇文章中给出模版。下面给出Kruscal算法的主体代码： 12345678910111213141516171819void kruscal()&#123; int ans = 0,cnt = 0; //选取最短边直到没有边可以再选或者图已经联通 while(!Q.empty() &amp;&amp; cnt != M-1)&#123; edge temp = Q.top(); Q.pop(); int f = temp.from,t = temp.to,v = temp.val; //利用并查集判断是否在同一棵树中，如果不在则加入树中 if(Find(t)!=Find(f))&#123; Union(f,t); cnt++; ans+=v; &#125; &#125; //没有选取到M-1条边（M为点的数量），说明图不能联通 if(cnt != M-1) puts("?"); //图已联通，输出最小边权和 else printf("%d\n",ans);&#125; 同样给出例题：hdu1683AC代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061#include &lt;bits/stdc++.h&gt;const int maxn = 200;using namespace std;struct edge&#123; int from; int to; int val; edge(int a = 0,int b = 0,int c = 0)&#123;from=a;to=b;val=c;&#125; friend bool operator &gt; (edge a,edge b)&#123; return a.val &gt; b.val; &#125;&#125;;int N,M,father[maxn];priority_queue&lt; edge,vector&lt;edge&gt;,greater&lt;edge&gt; &gt; Q;int Find(int a)&#123; if(father[a]==a) return a; return father[a]=Find(father[a]);&#125;void Union(int a,int b)&#123; int f1=Find(a),f2=Find(b); father[f2] = f1;&#125;void init()&#123; for(int i = 1; i &lt;= M; ++i) father[i]=i; while(!Q.empty()) Q.pop();&#125;void kruscal()&#123; int ans = 0,cnt = 0; while(!Q.empty() &amp;&amp; cnt != M-1)&#123; edge temp = Q.top(); Q.pop(); int f = temp.from,t = temp.to,v = temp.val; if(Find(t)!=Find(f))&#123; Union(f,t); cnt++; ans+=v; &#125; &#125; if(cnt != M-1) puts("?"); else printf("%d\n",ans);&#125;int main()&#123; while(scanf("%d",&amp;N))&#123; if(N==0) break; scanf("%d",&amp;M); init(); for(int i = 0; i &lt; N; i++)&#123; int a,b,c; scanf("%d%d%d",&amp;a,&amp;b,&amp;c); Q.push(edge(a,b,c)); &#125; if(N&lt;M-1)&#123;puts("?");continue;&#125; kruscal(); &#125; return 0;&#125; 后记以上就是两种最短路算法的实现过程了。后记不知道写啥了，就这样吧]]></content>
      <categories>
        <category>ACM算法基础</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>贪心</tag>
        <tag>最小生成树</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[图论最短路]]></title>
    <url>%2F2019%2F07%2F01%2Fminpath%2F</url>
    <content type="text"><![CDATA[最短路算法本文将介绍几种用于解决最短路问题的算法，仅给出用法，不给出证明（因为不会证明）。 问题简述最短路问题：给出若干个点和若干个带有边权的边，要求找出从某点到某点的最短路径。 邻接表简单来说就是为每一个点建立一个边链表记录了与这个点所连的所有边。实现方法很多，本文用vector实现。 123//edge为边的结构体，maxn为点的总数，E[i]中记录了与点i相连的所有边//如果题目为无向图，注意要push_back两个方向的边vector&lt;edge&gt; E[maxn]; 单源最短路即仅要求求出从一个点到其他所有点（某一点）的最短距离的问题。 dijkstra我将dijkstra认识为一个贪心的BFS过程，首先，我们需要用到两个结构体。1.边，这个结构体必须包含目标点，边权，可以包含出发点（也可以不包含）。 12345struct edge&#123; int to; int val; edge(int a = 0,int b = 0)&#123;to=a;val=b;&#125;&#125;; 2.状态，这个结构体需要包含当前所在的位置（影响联通路径的状态）和已经走过的距离，同时重载&gt;号，比较的依据为走过的距离，重载&gt;号是为了能够使用priority_queue。 123456789struct nod&#123; int pos; int d; nod(int a = 0,int b = 0)&#123;pos=a;d=b;&#125; //优先队列重载大于符号 friend bool operator &gt; (nod a, nod b)&#123; return a.d&gt;b.d; &#125;&#125;; 有了这两个结构体之后，我们就能开始dijkstra的主体了，简单地描述一下dijkstra的过程。1.录入数据。2.创建一个nod的优先队列，从小的开始出队列。3.将初始态（初始位置，经过的距离为0）push进优先队列，设初始最短路径都为无穷大。4.弹出队首元素，更新与队首位置相连的所有点，如果能够更新（距离变小了）某个点，则将这个点push进队列。5.重复第4步直到队列为空，这意味着没有点能够再次被更新了，dijkstra算法到此结束。下面给出算法主体代码： 12345678910111213141516171819202122232425void dij()&#123; memset(dis,inf,sizeof(dis)); priority_queue&lt; nod,vector&lt;nod&gt;,greater&lt;nod&gt; &gt; Q; //优先队列，从较小的开始出 Q.push(nod(N,0));//初始态,N为出发点 //类似BFS过程 while(!Q.empty())&#123; nod temp = Q.top(); int pos = temp.pos; int d = temp.d; Q.pop(); if(d &gt; dis[pos]) continue; dis[pos]=d; //遍历邻接表更新相邻点的最短距离 for(int i = 0; i &lt; E[pos].size(); ++i)&#123; int to = E[pos][i].to; int val = E[pos][i].val; int nd = d + val; //若能更新，则更新并把更新的点push进队列 if(nd &lt; dis[to])&#123; dis[to] = nd; Q.push(nod(to,nd)); &#125; &#125; &#125;&#125; 需要注意的是，dijkstra算法并不能判断负环，因此当题目中出现负边时慎用。 这里给出一道例题：POJ2387AC代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970#include &lt;iostream&gt;#include &lt;queue&gt;#include &lt;cstring&gt;#include &lt;algorithm&gt;const int maxn = 1000+50;const int inf = 0x3f3f3f3f;using namespace std;struct edge&#123; int to; int val; edge(int a = 0,int b = 0)&#123;to=a;val=b;&#125;&#125;;struct nod&#123; int pos; int d; nod(int a = 0,int b = 0)&#123;pos=a;d=b;&#125; //优先队列重载大于符号 friend bool operator &gt; (nod a, nod b)&#123; return a.d&gt;b.d; &#125;&#125;;//邻接表vector&lt;edge&gt; E[maxn];int T,N,dis[maxn];//dis[i]为从X到i的最短距离，可以根据情况扩充为d[i][j][k].....//加边，无向图时添加两条边void add(int f,int t,int v)&#123; E[f].push_back(edge(t,v)); E[t].push_back(edge(f,v)); return;&#125;void dij()&#123; memset(dis,inf,sizeof(dis)); priority_queue&lt; nod,vector&lt;nod&gt;,greater&lt;nod&gt; &gt; Q; Q.push(nod(N,0));//初始态,N为出发点 while(!Q.empty())&#123; nod temp = Q.top(); int pos = temp.pos; int d = temp.d; Q.pop(); if(d &gt; dis[pos]) continue; dis[pos]=d; //遍历邻接表更新相邻点的最短距离 for(int i = 0; i &lt; E[pos].size(); ++i)&#123; int to = E[pos][i].to; int val = E[pos][i].val; int nd = d + val; if(nd &lt; dis[to])&#123; dis[to] = nd; Q.push(nod(to,nd)); &#125; &#125; &#125;&#125;int main()&#123; ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); cin &gt;&gt; T &gt;&gt; N; while(T--)&#123; int from,to,val; cin &gt;&gt; from &gt;&gt; to &gt;&gt; val; add(from,to,val); &#125; dij(); cout &lt;&lt; dis[1] &lt;&lt; endl; return 0;&#125; 以下内容较难，可跳过此外，虽然在上题中dis[i]表示从起点到i点的最短距离，但实际上这个dis数组的下标代表的是一个状态，本题中状态只有所在的点，因此dis数组也只需要一个下标，dis数组的下标可以根据需要扩充。例如在hdu6071中，dis[i][j]表示的就是跑到了i点且跑过的距离模mod后为j的一个状态，我们也可以将每一种状态抽象为不同的点。同样给出AC代码（本题较难，可能另开文章单独解释） 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970#include &lt;bits/stdc++.h&gt;typedef long long ll;const int maxn = 6e5+20;const int mod = 998244353;const int inf = 0x3f3f3f3f;const ll llinf = 0x3f3f3f3f3f3f3f3f;using namespace std;struct edge&#123; ll from; ll to; ll val; edge(ll a = 0,ll b = 0,ll c = 0)&#123;from=a;to=b;val=c;&#125;&#125;;struct nod&#123; ll pos; ll d; nod(ll a=0,ll b=0)&#123;pos = a;d = b;&#125; friend bool operator &gt; (nod a,nod b)&#123; return a.d &gt; b.d; &#125;&#125;;ll T,k,d12,d23,d34,d41,m,dis[5][maxn];vector&lt;edge&gt; E[5];void dij()&#123; memset(dis,inf,sizeof(dis)); priority_queue&lt; nod,vector&lt;nod&gt;,greater&lt;nod&gt; &gt; Q; Q.push(nod(2,0)); while(!Q.empty())&#123; nod t = Q.top(); Q.pop(); if(t.d &gt; dis[t.pos][t.d%m]) continue; for(vector&lt;edge&gt;::iterator it = E[t.pos].begin(); it != E[t.pos].end(); it++)&#123; ll nd = t.d+(*it).val; if(nd &lt; dis[(*it).to][nd%m])&#123; dis[(*it).to][nd%m] = nd; Q.push(nod((*it).to,nd)); &#125; &#125; &#125;｝int main()&#123; ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); cin &gt;&gt; T; while(T--)&#123; for(int i = 1; i &lt;= 4; ++i) E[i].clear(); cin &gt;&gt; k &gt;&gt; d12 &gt;&gt; d23 &gt;&gt; d34 &gt;&gt; d41; E[1].push_back(edge(1,2,d12));E[2].push_back(edge(2,1,d12)); E[2].push_back(edge(2,3,d23));E[3].push_back(edge(3,2,d23)); E[3].push_back(edge(3,4,d34));E[4].push_back(edge(4,3,d34)); E[4].push_back(edge(4,1,d41));E[1].push_back(edge(1,4,d41)); m = 2 * min(d12,d23); dij(); ll ans = llinf; for(int i = 0; i &lt; m; i++)&#123; if(dis[2][i] &gt;= k) ans = min(ans,dis[2][i]); else&#123; ll delt = k - dis[2][i]; dis[2][i] += (delt/m+(delt%m?1:0))*m; ans=min(ans,dis[2][i]); &#125; &#125; cout &lt;&lt; ans &lt;&lt; endl; &#125;&#125; 至此，dijkstra算法的介绍告一段落。 SPFA(待补)同样为单源最短路算法，相较于dijkstra的优势是可以判断负环，劣势是比较慢。是优化版的Bellman-Ford算法。模版及例题待补 Bellman-Ford他死了。 多源最短路给定若干点以及点之间的距离(边)，要求求出任意两点间的最短距离。 Floyed算法又名Warshall算法。暴力遍历O($n^3$)次点，对于任意两点i,j，如果以k为桥梁能使i ~ j的距离变短，那么更新i ~ j的距离。由于算法特性，只能用邻接矩阵来存图。算法主体代码： 1234for(int k = 1; k &lt;= n; k++)for(int i = 1; i &lt;= n; i++)for(int j = 1; j &lt;= n; j++)w[i][j] = min(w[i][j], w[i][k] + w[k][j]); 给出一道例题：poj2139AC代码： 123456789101112131415161718192021222324252627282930313233343536373839404142#include&lt;iostream&gt;#include&lt;stdio.h&gt;#include&lt;algorithm&gt;#include&lt;cstring&gt;typedef long long ll;const int inf = 0x3f3f3f3f;using namespace std;int w[303][303], tmp[303];int main()&#123; int n, m, t; scanf("%d %d", &amp;n, &amp;m); memset(w, inf, sizeof(w)); for(int i = 1; i &lt;= n; i++) w[i][i] = 0; while(m--) &#123; cin &gt;&gt; t; for(int i = 0; i &lt; t; i++) &#123; cin &gt;&gt; tmp[i]; &#125; for(int i = 0; i &lt; t; i++) for(int j = 0; j &lt; i; j++) w[tmp[i]][tmp[j]] = w[tmp[j]][tmp[i]] = 1; &#125; for(int k = 1; k &lt;= n; k++) for(int i = 1; i &lt;= n; i++) for(int j = 1; j &lt;= n; j++) w[i][j] = min(w[i][j], w[i][k] + w[k][j]); double ans = inf; for(int i = 1; i &lt;= n; i++) &#123; int sum = 0; for(int j = 1; j &lt;= n; j++) sum += w[i][j]; ans = min(ans, sum * 100 * 1.0/ (n - 1)); &#125; printf("%d\n", (int)ans); return 0;&#125; 非常简单的一个算法，但是他的空间复杂度和时间复杂度都过高，并不常用。 后记好吧，从篇幅上可以看出，最短路算法中最常用，最强大的算法就是dijkstra了，他的变形也有很多，需要好好掌握哦！本文中一些STL会在将来的文章里补上用法。emmm可能会吧]]></content>
      <categories>
        <category>ACM算法基础</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>贪心</tag>
        <tag>最短路问题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Trie]]></title>
    <url>%2F2019%2F07%2F01%2FTrie%2F</url>
    <content type="text"><![CDATA[TrieTrie，也叫做字典树，是一种树形结构，可以高效的存储字符串和查询字符串。 Trie比较简单，这里只做简单的介绍，并给出例题和模版。例题：hdu1251题意简述：给定一系列字符串，再给出多个前缀，输出这些前缀在多少个字符串中出现过。 Trie的组成这种树形结构只有一个根节点，根节点没有意义（虚节点）。网上很多文章中将每一个节点视为一个字符，但事实并非如此，在Trie中，每一条边代表了一个字符，而从根节点走到某一节点路径上所有字符组成的字符串，则为该节点所代表的字符串。为了方便讲解，这里直接给出Trie节点的定义： 123456789101112struct trie&#123; trie *nxt[26]; //子节点的指针数组，此处26为字符集的大小，可以根据需求修改 int cnt; //此题用于统计前缀，根据需求修改 //初始化 trie() &#123; cnt = 1; //初始化所有nxt为NULL memset(nxt,NULL,sizeof(nxt)); &#125;&#125;; 我们可以认为，从一个节点p到节点p-&gt;nxt[id]的边所代表的字符即为id所映射的字符。以a ~ z映射到0 ~ 25为例，root-&gt;nxt[0]-&gt;nxt[1]-&gt;nxt[2]节点所代表的的字符串就是abc。 Trie的构建与线段树不同，Trie并不是输入完所有字符串后统一构建的(当然你想这么做也是可以的，但是会MLE),Trie的构建通常是输入一个字符串就插入一个字符串，插入的过程很简单，如果nxt[id]已经存在就沿着走，如果不存在就新建一个。以下为代码实现： 12345678910111213141516171819202122void Insert(char *s)&#123; trie *p = root; i = 0; //遍历字符串 while(s[i])&#123; id = s[i] - 'a'; //如果存在，就沿着走，并操作路径上的统计量（此处用于统计前缀） if(p-&gt;nxt[id]) &#123; p = p-&gt;nxt[id]; p -&gt; cnt++; &#125; //如果不存在，就新建，当然也要走过去 else &#123; p -&gt; nxt[id] = new trie; p = p -&gt; nxt[id]; &#125; i++; &#125;&#125; Trie的查询字典树的查询视题意而定，在本次例题中，为统计前缀出现的次数。根据字符串沿着树遍历即可，若遇到nxt[id]==NULL的情况，说明没找到，直接返回0。以下为代码实现 12345678910111213141516int query(char* s)&#123; trie *p = root; i = 0; while(s[i]) &#123; id = s[i] - 'a'; //找得到就沿着走 if(p -&gt; nxt[id]) p = p -&gt; nxt[id]; //找不到直接返回0 else return 0; i++; &#125; //若找到了，返回最终节点的cnt值 return p -&gt; cnt;&#125; Trie的删除递归删除即可 123456void Free(trie *p)&#123; for(i = 0; i &lt; 26; ++i) if(p -&gt; nxt[i] != NULL) Free(p-&gt;nxt[i]); delete(p); p = NULL;&#125; 例题+模版回到例题的解答，解题过程非常简单毕竟是模版题1.根据给出的字符串建立Trie2.根据前缀在Trie上遍历 AC代码（模版）：本题用C++提交的，用G++提交有惊喜哦本题G++提交会MLE，请用C++提交 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576#include &lt;stdio.h&gt;#include &lt;iostream&gt;#include &lt;cstring&gt;typedef unsigned long long ull;const int maxn = 11;const int inf = 0x3f3f3f3f;using namespace std;struct trie&#123; trie *nxt[26]; int cnt; trie() &#123; cnt = 1; memset(nxt,NULL,sizeof(nxt)); &#125;&#125;;trie *root;int i,id;char S[maxn],s1[maxn];void Insert(char *s)&#123; trie *p = root; i = 0; while(s[i])&#123; id = s[i] - 'a'; if(p-&gt;nxt[id]) &#123; p = p-&gt;nxt[id]; p -&gt; cnt++; &#125; else &#123; p -&gt; nxt[id] = new trie; p = p -&gt; nxt[id]; &#125; i++; &#125;&#125;int query(char* s)&#123; trie *p = root; i = 0; while(s[i]) &#123; id = s[i] - 'a'; if(p -&gt; nxt[id]) p = p -&gt; nxt[id]; else return 0; i++; &#125; return p -&gt; cnt;&#125;void Free(trie *p)&#123; for(i = 0; i &lt; 26; ++i) if(p -&gt; nxt[i] != NULL) Free(p-&gt;nxt[i]); delete(p); p = NULL;&#125;int main()&#123; root = new trie; while(scanf("%s",S))&#123; Insert(S); cin.get(); if(cin.peek() == '\n') break; &#125; while(scanf("%s",s1) != EOF)&#123; printf("%d\n",query(s1)); &#125; return 0;&#125;]]></content>
      <categories>
        <category>ACM算法基础</category>
      </categories>
      <tags>
        <tag>Trie</tag>
        <tag>字符串</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AC自动机]]></title>
    <url>%2F2019%2F07%2F01%2FACautoman%2F</url>
    <content type="text"><![CDATA[AC自动机AC自动机，用于多模字符串匹配，类似KMP+Trie。最近越来越觉得AC自动机又神奇有有意思，顶上来再看看。 一种最常见的题目如下（裸题模版）题意简述：首先输入多个单词（模式串），接着输入一串目标字符串，输出有多少个模式串在目标字符串中出现过。解题步骤：1.根据给出的模式串构造一个Trie树。2.在Trie树上构造fail指针（构造Trie图）。3.将目标字符串在Trie图上进行匹配。 2019-07-07补充几个AC自动机的特点：1.将目标串在由模式串组成组成的AC自动机上跑一遍以后，只要任一节点所代表的字符串是目标串的子串，它就会被遍历到。2.即使节点不是字符串的结束节点，它也会被遍历到，且在目标串中出现几次就会被遍历到几次，如果希望不要重复遍历要打上标记。3.以上两点都是由fail指针的特点和匹配过程导出的。4.通常AC自动机的题都是构造题，我们需要把问题转换成多模子串匹配问题。 Fail指针Fail指针的构造过程：1.用BFS的顺序逐层向下构造Fail指针。2.当一个节点的父亲指针为Root时，将Fail指针指向Root。3.当要获取一个节点（父节点不为Root）的Fail指针时，从其父亲指针的Fail指针开始查找与自己同名的子节点，若找到，则这个节点的Fail指针指向该与自己同名的子节点；若找不到，则沿着Fail指针继续寻找直到找到或直到指向Root时仍找不到。若指向根节点时仍然找不到，及当前节点没有Fail指针，将Fail指针指向Root。具体代码如下： 12345678910111213141516171819202122232425262728293031323334void getFail()&#123; queue&lt;trie*&gt; q; //用于BFS q.push(root); trie *temp,*p; while(!q.empty())&#123; p = q.front(); q.pop(); for(int i = 0; i &lt; 26; ++i)&#123; if(p -&gt; nxt[i])&#123; //父节点为root的节点fail指针指向root if(p == root) p -&gt; nxt[i] -&gt; fail = root; else&#123; //从父节点的fail指针开始查找 temp = p -&gt; fail; //当temp为NULL时即没有找到同名的子节点 while(temp)&#123; //找到了与自己同名的子节点，则让当前节点的fail指向该子节点，同时结束循环 if(temp -&gt; nxt[i])&#123; p -&gt; nxt[i] -&gt; fail = temp -&gt; nxt[i]; break; &#125; //沿着fail指针继续查找 temp = temp -&gt; fail; &#125; //temp为NULL，即没有找到同名的子节点，将fail指针指向root if(!temp) p -&gt; nxt[i] -&gt; fail = root; &#125; //bfs q.push(p -&gt; nxt[i]); &#125; &#125; &#125;&#125; Fail指针具有的特点：1.从任意节点沿着fail指针遍历，总能回到root节点。2.一个节点的fail指针指向的节点所代表的字符串，为当前节点字符串的某一后缀，因此当匹配时匹配到某一节点时，这一节点fail指针所指向的字符串也一定出现过了，所以在匹配过程中每匹配一个字符，要沿着fail指针跳回root（例如当匹配到abcd时，bcd,cd,d都一定已经出现过了）。3.这个性质与KMP中的next数组很想，可以结合理解。下图是一张构建好的fail指针的图： 查询过程查询步骤：1.如果当前字符匹配，则沿着nxt[id]向下走；如果当前字符不匹配，则沿着fail指针查找nxt[id]直到找到或指向root。2.每匹配完一个字符，沿着fail指针跳回root同时统计路径上出现的单词数。3.将匹配过的模式串打上标记避免重复统计。具体代码如下： 12345678910111213141516171819202122232425int query(char* s)&#123; int i = 0,res = 0; trie *p = root; trie *temp; //遍历字符串s while(s[i])&#123; //26个小写字母映射到0~25 int id = s[i] - 'a'; //若没有找到nxt[id]且当前指针没有指向root（root的fail指针为NULL），则沿着fail指针遍历直到找到或指向root while(!p -&gt; nxt[id] &amp;&amp; p != root) p = p -&gt; fail; p = p -&gt; nxt[id]; //若p==NULL，说明最终都没有找到，让p指向root if(p == NULL) p = root; //从p开始跳fail指针统计路径上的单词数 temp = p; while(temp != root &amp;&amp; temp -&gt; flag != 0)&#123; res += temp -&gt; flag; //统计后打上标记（清零单词数量） temp -&gt; flag = 0; temp = temp -&gt; fail; &#125; i++; &#125; return res;&#125; 例题+模版hdu2222题意简述：首先输入多个单词（模式串），接着输入一个目标字符串，输出有多少个模式串在目标字符串中出现过。以下为AC代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114#include &lt;bits/stdc++.h&gt;typedef unsigned long long ull;const int P = 1e9+7;const int maxn = 5e5 + 200;const int inf = 0x3f3f3f3f;using namespace std;struct trie&#123; trie *nxt[26]; trie *fail; int cnt; //计算前缀时可用，本题无用 int flag; //记录当前节点结束的字符串个数 trie()&#123; cnt = 1; flag = 0; fail = NULL; memset(nxt,NULL,sizeof(nxt)); &#125;&#125;;trie *root;int T,N,Q;char S[maxn],s1[maxn],s2[maxn];void Insert(char *s)&#123; trie *p = root; int len = strlen(s); for(int i = 0; i &lt; len; i++)&#123; int id = s[i] - 'a'; if(p-&gt;nxt[id] != NULL)&#123; p = p-&gt;nxt[id]; p -&gt; cnt++; &#125; else&#123; p -&gt; nxt[id] = new trie; p = p -&gt; nxt[id]; &#125; &#125; p -&gt; flag++;&#125;void getFail()&#123; queue&lt;trie*&gt; q; q.push(root); trie *temp,*p; while(!q.empty())&#123; p = q.front(); q.pop(); for(int i = 0; i &lt; 26; ++i)&#123; if(p -&gt; nxt[i])&#123; if(p == root) p -&gt; nxt[i] -&gt; fail = root; else&#123; temp = p -&gt; fail; while(temp)&#123; if(temp -&gt; nxt[i])&#123; p -&gt; nxt[i] -&gt; fail = temp -&gt; nxt[i]; break; &#125; temp = temp -&gt; fail; &#125; if(!temp) p -&gt; nxt[i] -&gt; fail = root; &#125; q.push(p -&gt; nxt[i]); &#125; &#125; &#125;&#125;int query(char* s)&#123; int i = 0,res = 0; trie *p = root; trie *temp; while(s[i])&#123; int id = s[i] - 'a'; while(!p -&gt; nxt[id] &amp;&amp; p != root) p = p -&gt; fail; p = p -&gt; nxt[id]; if(p == NULL) p = root; temp = p; while(temp != root &amp;&amp; temp -&gt; flag != 0)&#123; res += temp -&gt; flag; temp -&gt; flag = 0; temp = temp -&gt; fail; &#125; i++; &#125; return res;&#125;//递归释放Trievoid Free(trie *p)&#123; for(int i = 0; i &lt; 26; ++i)&#123; if(p -&gt; nxt[i] != NULL) Free(p-&gt;nxt[i]); &#125; delete(p); p = NULL;&#125;int main()&#123; scanf("%d",&amp;T); while(T--)&#123; root = new trie; scanf("%d",&amp;N); while(N--) &#123; scanf("%s",S); Insert(S); &#125; getFail(); scanf("%s",s1); printf("%d\n",query(s1)); Free(root); &#125;&#125;]]></content>
      <categories>
        <category>ACM算法基础</category>
      </categories>
      <tags>
        <tag>kmp</tag>
        <tag>Trie</tag>
        <tag>AC自动机</tag>
        <tag>字符串</tag>
      </tags>
  </entry>
</search>
